Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> DECLARATION declaration
Rule 2     program -> DEFINITION definition
Rule 3     program -> DECLARATION declaration program
Rule 4     program -> DEFINITION definition program
Rule 5     types -> INT
Rule 6     types -> FLOATTYPE
Rule 7     types -> BOOL
Rule 8     types -> STRINGTYPE
Rule 9     declaration -> NAME LPAR dargument RPAR COLON types
Rule 10    declaration -> NAME LPAR dargument RPAR COLON VOID
Rule 11    definition -> NAME LPAR dargument RPAR COLON types block
Rule 12    definition -> NAME LPAR dargument RPAR COLON VOID block
Rule 13    dargument -> NAME COLON types
Rule 14    dargument -> NAME COLON types COMMA dargument
Rule 15    block -> LCURLY RCURLY
Rule 16    block -> LCURLY block_content RCURLY
Rule 17    block_content -> statement
Rule 18    block_content -> statement block_content
Rule 19    statement -> RETURN SEMICOLON
Rule 20    statement -> RETURN expression SEMICOLON
Rule 21    statement -> IF expression block
Rule 22    statement -> IF expression block ELSE block
Rule 23    statement -> WHILE expression block
Rule 24    statement -> NAME COLON types EQUALS expression SEMICOLON
Rule 25    statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON
Rule 26    statement -> NAME EQUALS expression SEMICOLON
Rule 27    statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON
Rule 28    statement -> expression
Rule 29    expression -> expression SUM expression
Rule 30    expression -> expression SUB expression
Rule 31    expression -> expression MULTIPLY expression
Rule 32    expression -> expression DIVIDE expression
Rule 33    expression -> expression RESTOF expression
Rule 34    expression -> expression SAMEAS expression
Rule 35    expression -> expression NEQUAL expression
Rule 36    expression -> expression HEQUAL expression
Rule 37    expression -> expression LEQUAL expression
Rule 38    expression -> expression HIGHER expression
Rule 39    expression -> expression LOWER expression
Rule 40    expression -> expression AND expression
Rule 41    expression -> expression OR expression
Rule 42    expression -> TRUE
Rule 43    expression -> FALSE
Rule 44    expression -> DIFFER expression
Rule 45    expression -> NUMBER
Rule 46    expression -> FLOAT
Rule 47    expression -> STRING
Rule 48    expression -> NAME
Rule 49    expression -> NAME LBRACK expression RBRACK
Rule 50    expression -> NAME LPAR RPAR LBRACK expression RBRACK
Rule 51    expression -> NAME LPAR argument RPAR LBRACK expression RBRACK
Rule 52    expression -> NAME LPAR argument RPAR
Rule 53    argument -> expression
Rule 54    argument -> expression COMMA expression

Terminals, with rules where they appear

AND                  : 40
BOOL                 : 7
COLON                : 9 10 11 12 13 14 24 25
COMMA                : 14 54
DECLARATION          : 1 3
DEFINITION           : 2 4
DIFFER               : 44
DIVIDE               : 32
ELSE                 : 22
EQUALS               : 24 25 26 27
FALSE                : 43
FLOAT                : 46
FLOATTYPE            : 6
HEQUAL               : 36
HIGHER               : 38
IF                   : 21 22
INT                  : 5
LBRACK               : 49 50 51
LCURLY               : 15 16
LEQUAL               : 37
LOWER                : 39
LPAR                 : 9 10 11 12 50 51 52
MULTIPLY             : 31
NAME                 : 9 10 11 12 13 14 24 25 26 27 48 49 50 51 52
NEQUAL               : 35
NUMBER               : 45
OR                   : 41
QMARK                : 25 25 27 27
RBRACK               : 49 50 51
RCURLY               : 15 16
RESTOF               : 33
RETURN               : 19 20
RPAR                 : 9 10 11 12 50 51 52
SAMEAS               : 34
SEMICOLON            : 19 20 24 25 26 27
STRING               : 25 27 47
STRINGTYPE           : 8
SUB                  : 30
SUM                  : 29
TRUE                 : 42
VOID                 : 10 12
WHILE                : 23
error                : 

Nonterminals, with rules where they appear

argument             : 51 52
block                : 11 12 21 22 22 23
block_content        : 16 18
dargument            : 9 10 11 12 14
declaration          : 1 3
definition           : 2 4
expression           : 20 21 22 23 24 26 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 44 49 50 51 53 54 54
program              : 3 4 0
statement            : 17 18
types                : 9 11 13 14 24 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . DECLARATION declaration
    (2) program -> . DEFINITION definition
    (3) program -> . DECLARATION declaration program
    (4) program -> . DEFINITION definition program

    DECLARATION     shift and go to state 2
    DEFINITION      shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> DECLARATION . declaration
    (3) program -> DECLARATION . declaration program
    (9) declaration -> . NAME LPAR dargument RPAR COLON types
    (10) declaration -> . NAME LPAR dargument RPAR COLON VOID

    NAME            shift and go to state 5

    declaration                    shift and go to state 4

state 3

    (2) program -> DEFINITION . definition
    (4) program -> DEFINITION . definition program
    (11) definition -> . NAME LPAR dargument RPAR COLON types block
    (12) definition -> . NAME LPAR dargument RPAR COLON VOID block

    NAME            shift and go to state 7

    definition                     shift and go to state 6

state 4

    (1) program -> DECLARATION declaration .
    (3) program -> DECLARATION declaration . program
    (1) program -> . DECLARATION declaration
    (2) program -> . DEFINITION definition
    (3) program -> . DECLARATION declaration program
    (4) program -> . DEFINITION definition program

    $end            reduce using rule 1 (program -> DECLARATION declaration .)
    DECLARATION     shift and go to state 2
    DEFINITION      shift and go to state 3

    program                        shift and go to state 8

state 5

    (9) declaration -> NAME . LPAR dargument RPAR COLON types
    (10) declaration -> NAME . LPAR dargument RPAR COLON VOID

    LPAR            shift and go to state 9


state 6

    (2) program -> DEFINITION definition .
    (4) program -> DEFINITION definition . program
    (1) program -> . DECLARATION declaration
    (2) program -> . DEFINITION definition
    (3) program -> . DECLARATION declaration program
    (4) program -> . DEFINITION definition program

    $end            reduce using rule 2 (program -> DEFINITION definition .)
    DECLARATION     shift and go to state 2
    DEFINITION      shift and go to state 3

    program                        shift and go to state 10

state 7

    (11) definition -> NAME . LPAR dargument RPAR COLON types block
    (12) definition -> NAME . LPAR dargument RPAR COLON VOID block

    LPAR            shift and go to state 11


state 8

    (3) program -> DECLARATION declaration program .

    $end            reduce using rule 3 (program -> DECLARATION declaration program .)


state 9

    (9) declaration -> NAME LPAR . dargument RPAR COLON types
    (10) declaration -> NAME LPAR . dargument RPAR COLON VOID
    (13) dargument -> . NAME COLON types
    (14) dargument -> . NAME COLON types COMMA dargument

    NAME            shift and go to state 12

    dargument                      shift and go to state 13

state 10

    (4) program -> DEFINITION definition program .

    $end            reduce using rule 4 (program -> DEFINITION definition program .)


state 11

    (11) definition -> NAME LPAR . dargument RPAR COLON types block
    (12) definition -> NAME LPAR . dargument RPAR COLON VOID block
    (13) dargument -> . NAME COLON types
    (14) dargument -> . NAME COLON types COMMA dargument

    NAME            shift and go to state 12

    dargument                      shift and go to state 14

state 12

    (13) dargument -> NAME . COLON types
    (14) dargument -> NAME . COLON types COMMA dargument

    COLON           shift and go to state 15


state 13

    (9) declaration -> NAME LPAR dargument . RPAR COLON types
    (10) declaration -> NAME LPAR dargument . RPAR COLON VOID

    RPAR            shift and go to state 16


state 14

    (11) definition -> NAME LPAR dargument . RPAR COLON types block
    (12) definition -> NAME LPAR dargument . RPAR COLON VOID block

    RPAR            shift and go to state 17


state 15

    (13) dargument -> NAME COLON . types
    (14) dargument -> NAME COLON . types COMMA dargument
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    INT             shift and go to state 19
    FLOATTYPE       shift and go to state 20
    BOOL            shift and go to state 21
    STRINGTYPE      shift and go to state 22

    types                          shift and go to state 18

state 16

    (9) declaration -> NAME LPAR dargument RPAR . COLON types
    (10) declaration -> NAME LPAR dargument RPAR . COLON VOID

    COLON           shift and go to state 23


state 17

    (11) definition -> NAME LPAR dargument RPAR . COLON types block
    (12) definition -> NAME LPAR dargument RPAR . COLON VOID block

    COLON           shift and go to state 24


state 18

    (13) dargument -> NAME COLON types .
    (14) dargument -> NAME COLON types . COMMA dargument

    RPAR            reduce using rule 13 (dargument -> NAME COLON types .)
    COMMA           shift and go to state 25


state 19

    (5) types -> INT .

    COMMA           reduce using rule 5 (types -> INT .)
    RPAR            reduce using rule 5 (types -> INT .)
    DECLARATION     reduce using rule 5 (types -> INT .)
    DEFINITION      reduce using rule 5 (types -> INT .)
    $end            reduce using rule 5 (types -> INT .)
    LCURLY          reduce using rule 5 (types -> INT .)
    EQUALS          reduce using rule 5 (types -> INT .)


state 20

    (6) types -> FLOATTYPE .

    COMMA           reduce using rule 6 (types -> FLOATTYPE .)
    RPAR            reduce using rule 6 (types -> FLOATTYPE .)
    DECLARATION     reduce using rule 6 (types -> FLOATTYPE .)
    DEFINITION      reduce using rule 6 (types -> FLOATTYPE .)
    $end            reduce using rule 6 (types -> FLOATTYPE .)
    LCURLY          reduce using rule 6 (types -> FLOATTYPE .)
    EQUALS          reduce using rule 6 (types -> FLOATTYPE .)


state 21

    (7) types -> BOOL .

    COMMA           reduce using rule 7 (types -> BOOL .)
    RPAR            reduce using rule 7 (types -> BOOL .)
    DECLARATION     reduce using rule 7 (types -> BOOL .)
    DEFINITION      reduce using rule 7 (types -> BOOL .)
    $end            reduce using rule 7 (types -> BOOL .)
    LCURLY          reduce using rule 7 (types -> BOOL .)
    EQUALS          reduce using rule 7 (types -> BOOL .)


state 22

    (8) types -> STRINGTYPE .

    COMMA           reduce using rule 8 (types -> STRINGTYPE .)
    RPAR            reduce using rule 8 (types -> STRINGTYPE .)
    DECLARATION     reduce using rule 8 (types -> STRINGTYPE .)
    DEFINITION      reduce using rule 8 (types -> STRINGTYPE .)
    $end            reduce using rule 8 (types -> STRINGTYPE .)
    LCURLY          reduce using rule 8 (types -> STRINGTYPE .)
    EQUALS          reduce using rule 8 (types -> STRINGTYPE .)


state 23

    (9) declaration -> NAME LPAR dargument RPAR COLON . types
    (10) declaration -> NAME LPAR dargument RPAR COLON . VOID
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    VOID            shift and go to state 27
    INT             shift and go to state 19
    FLOATTYPE       shift and go to state 20
    BOOL            shift and go to state 21
    STRINGTYPE      shift and go to state 22

    types                          shift and go to state 26

state 24

    (11) definition -> NAME LPAR dargument RPAR COLON . types block
    (12) definition -> NAME LPAR dargument RPAR COLON . VOID block
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    VOID            shift and go to state 29
    INT             shift and go to state 19
    FLOATTYPE       shift and go to state 20
    BOOL            shift and go to state 21
    STRINGTYPE      shift and go to state 22

    types                          shift and go to state 28

state 25

    (14) dargument -> NAME COLON types COMMA . dargument
    (13) dargument -> . NAME COLON types
    (14) dargument -> . NAME COLON types COMMA dargument

    NAME            shift and go to state 12

    dargument                      shift and go to state 30

state 26

    (9) declaration -> NAME LPAR dargument RPAR COLON types .

    DECLARATION     reduce using rule 9 (declaration -> NAME LPAR dargument RPAR COLON types .)
    DEFINITION      reduce using rule 9 (declaration -> NAME LPAR dargument RPAR COLON types .)
    $end            reduce using rule 9 (declaration -> NAME LPAR dargument RPAR COLON types .)


state 27

    (10) declaration -> NAME LPAR dargument RPAR COLON VOID .

    DECLARATION     reduce using rule 10 (declaration -> NAME LPAR dargument RPAR COLON VOID .)
    DEFINITION      reduce using rule 10 (declaration -> NAME LPAR dargument RPAR COLON VOID .)
    $end            reduce using rule 10 (declaration -> NAME LPAR dargument RPAR COLON VOID .)


state 28

    (11) definition -> NAME LPAR dargument RPAR COLON types . block
    (15) block -> . LCURLY RCURLY
    (16) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 32

    block                          shift and go to state 31

state 29

    (12) definition -> NAME LPAR dargument RPAR COLON VOID . block
    (15) block -> . LCURLY RCURLY
    (16) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 32

    block                          shift and go to state 33

state 30

    (14) dargument -> NAME COLON types COMMA dargument .

    RPAR            reduce using rule 14 (dargument -> NAME COLON types COMMA dargument .)


state 31

    (11) definition -> NAME LPAR dargument RPAR COLON types block .

    DECLARATION     reduce using rule 11 (definition -> NAME LPAR dargument RPAR COLON types block .)
    DEFINITION      reduce using rule 11 (definition -> NAME LPAR dargument RPAR COLON types block .)
    $end            reduce using rule 11 (definition -> NAME LPAR dargument RPAR COLON types block .)


state 32

    (15) block -> LCURLY . RCURLY
    (16) block -> LCURLY . block_content RCURLY
    (17) block_content -> . statement
    (18) block_content -> . statement block_content
    (19) statement -> . RETURN SEMICOLON
    (20) statement -> . RETURN expression SEMICOLON
    (21) statement -> . IF expression block
    (22) statement -> . IF expression block ELSE block
    (23) statement -> . WHILE expression block
    (24) statement -> . NAME COLON types EQUALS expression SEMICOLON
    (25) statement -> . NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON
    (26) statement -> . NAME EQUALS expression SEMICOLON
    (27) statement -> . NAME EQUALS QMARK STRING QMARK SEMICOLON
    (28) statement -> . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    RCURLY          shift and go to state 34
    RETURN          shift and go to state 37
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    NAME            shift and go to state 41
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42

    block_content                  shift and go to state 35
    statement                      shift and go to state 36
    expression                     shift and go to state 38

state 33

    (12) definition -> NAME LPAR dargument RPAR COLON VOID block .

    DECLARATION     reduce using rule 12 (definition -> NAME LPAR dargument RPAR COLON VOID block .)
    DEFINITION      reduce using rule 12 (definition -> NAME LPAR dargument RPAR COLON VOID block .)
    $end            reduce using rule 12 (definition -> NAME LPAR dargument RPAR COLON VOID block .)


state 34

    (15) block -> LCURLY RCURLY .

    DECLARATION     reduce using rule 15 (block -> LCURLY RCURLY .)
    DEFINITION      reduce using rule 15 (block -> LCURLY RCURLY .)
    $end            reduce using rule 15 (block -> LCURLY RCURLY .)
    ELSE            reduce using rule 15 (block -> LCURLY RCURLY .)
    RETURN          reduce using rule 15 (block -> LCURLY RCURLY .)
    IF              reduce using rule 15 (block -> LCURLY RCURLY .)
    WHILE           reduce using rule 15 (block -> LCURLY RCURLY .)
    NAME            reduce using rule 15 (block -> LCURLY RCURLY .)
    TRUE            reduce using rule 15 (block -> LCURLY RCURLY .)
    FALSE           reduce using rule 15 (block -> LCURLY RCURLY .)
    DIFFER          reduce using rule 15 (block -> LCURLY RCURLY .)
    NUMBER          reduce using rule 15 (block -> LCURLY RCURLY .)
    FLOAT           reduce using rule 15 (block -> LCURLY RCURLY .)
    STRING          reduce using rule 15 (block -> LCURLY RCURLY .)
    RCURLY          reduce using rule 15 (block -> LCURLY RCURLY .)


state 35

    (16) block -> LCURLY block_content . RCURLY

    RCURLY          shift and go to state 48


state 36

    (17) block_content -> statement .
    (18) block_content -> statement . block_content
    (17) block_content -> . statement
    (18) block_content -> . statement block_content
    (19) statement -> . RETURN SEMICOLON
    (20) statement -> . RETURN expression SEMICOLON
    (21) statement -> . IF expression block
    (22) statement -> . IF expression block ELSE block
    (23) statement -> . WHILE expression block
    (24) statement -> . NAME COLON types EQUALS expression SEMICOLON
    (25) statement -> . NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON
    (26) statement -> . NAME EQUALS expression SEMICOLON
    (27) statement -> . NAME EQUALS QMARK STRING QMARK SEMICOLON
    (28) statement -> . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    RCURLY          reduce using rule 17 (block_content -> statement .)
    RETURN          shift and go to state 37
    IF              shift and go to state 39
    WHILE           shift and go to state 40
    NAME            shift and go to state 41
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42

    statement                      shift and go to state 36
    block_content                  shift and go to state 49
    expression                     shift and go to state 38

state 37

    (19) statement -> RETURN . SEMICOLON
    (20) statement -> RETURN . expression SEMICOLON
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    SEMICOLON       shift and go to state 50
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 51

state 38

    (28) statement -> expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    RETURN          reduce using rule 28 (statement -> expression .)
    IF              reduce using rule 28 (statement -> expression .)
    WHILE           reduce using rule 28 (statement -> expression .)
    NAME            reduce using rule 28 (statement -> expression .)
    TRUE            reduce using rule 28 (statement -> expression .)
    FALSE           reduce using rule 28 (statement -> expression .)
    DIFFER          reduce using rule 28 (statement -> expression .)
    NUMBER          reduce using rule 28 (statement -> expression .)
    FLOAT           reduce using rule 28 (statement -> expression .)
    STRING          reduce using rule 28 (statement -> expression .)
    RCURLY          reduce using rule 28 (statement -> expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 39

    (21) statement -> IF . expression block
    (22) statement -> IF . expression block ELSE block
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 66

state 40

    (23) statement -> WHILE . expression block
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 67

state 41

    (24) statement -> NAME . COLON types EQUALS expression SEMICOLON
    (25) statement -> NAME . COLON types EQUALS QMARK STRING QMARK SEMICOLON
    (26) statement -> NAME . EQUALS expression SEMICOLON
    (27) statement -> NAME . EQUALS QMARK STRING QMARK SEMICOLON
    (48) expression -> NAME .
    (49) expression -> NAME . LBRACK expression RBRACK
    (50) expression -> NAME . LPAR RPAR LBRACK expression RBRACK
    (51) expression -> NAME . LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> NAME . LPAR argument RPAR

    COLON           shift and go to state 68
    EQUALS          shift and go to state 69
    SUM             reduce using rule 48 (expression -> NAME .)
    SUB             reduce using rule 48 (expression -> NAME .)
    MULTIPLY        reduce using rule 48 (expression -> NAME .)
    DIVIDE          reduce using rule 48 (expression -> NAME .)
    RESTOF          reduce using rule 48 (expression -> NAME .)
    SAMEAS          reduce using rule 48 (expression -> NAME .)
    NEQUAL          reduce using rule 48 (expression -> NAME .)
    HEQUAL          reduce using rule 48 (expression -> NAME .)
    LEQUAL          reduce using rule 48 (expression -> NAME .)
    HIGHER          reduce using rule 48 (expression -> NAME .)
    LOWER           reduce using rule 48 (expression -> NAME .)
    AND             reduce using rule 48 (expression -> NAME .)
    OR              reduce using rule 48 (expression -> NAME .)
    RETURN          reduce using rule 48 (expression -> NAME .)
    IF              reduce using rule 48 (expression -> NAME .)
    WHILE           reduce using rule 48 (expression -> NAME .)
    NAME            reduce using rule 48 (expression -> NAME .)
    TRUE            reduce using rule 48 (expression -> NAME .)
    FALSE           reduce using rule 48 (expression -> NAME .)
    DIFFER          reduce using rule 48 (expression -> NAME .)
    NUMBER          reduce using rule 48 (expression -> NAME .)
    FLOAT           reduce using rule 48 (expression -> NAME .)
    STRING          reduce using rule 48 (expression -> NAME .)
    RCURLY          reduce using rule 48 (expression -> NAME .)
    LBRACK          shift and go to state 70
    LPAR            shift and go to state 71


state 42

    (47) expression -> STRING .

    SUM             reduce using rule 47 (expression -> STRING .)
    SUB             reduce using rule 47 (expression -> STRING .)
    MULTIPLY        reduce using rule 47 (expression -> STRING .)
    DIVIDE          reduce using rule 47 (expression -> STRING .)
    RESTOF          reduce using rule 47 (expression -> STRING .)
    SAMEAS          reduce using rule 47 (expression -> STRING .)
    NEQUAL          reduce using rule 47 (expression -> STRING .)
    HEQUAL          reduce using rule 47 (expression -> STRING .)
    LEQUAL          reduce using rule 47 (expression -> STRING .)
    HIGHER          reduce using rule 47 (expression -> STRING .)
    LOWER           reduce using rule 47 (expression -> STRING .)
    AND             reduce using rule 47 (expression -> STRING .)
    OR              reduce using rule 47 (expression -> STRING .)
    RETURN          reduce using rule 47 (expression -> STRING .)
    IF              reduce using rule 47 (expression -> STRING .)
    WHILE           reduce using rule 47 (expression -> STRING .)
    NAME            reduce using rule 47 (expression -> STRING .)
    TRUE            reduce using rule 47 (expression -> STRING .)
    FALSE           reduce using rule 47 (expression -> STRING .)
    DIFFER          reduce using rule 47 (expression -> STRING .)
    NUMBER          reduce using rule 47 (expression -> STRING .)
    FLOAT           reduce using rule 47 (expression -> STRING .)
    STRING          reduce using rule 47 (expression -> STRING .)
    RCURLY          reduce using rule 47 (expression -> STRING .)
    SEMICOLON       reduce using rule 47 (expression -> STRING .)
    LCURLY          reduce using rule 47 (expression -> STRING .)
    RBRACK          reduce using rule 47 (expression -> STRING .)
    COMMA           reduce using rule 47 (expression -> STRING .)
    RPAR            reduce using rule 47 (expression -> STRING .)


state 43

    (42) expression -> TRUE .

    SUM             reduce using rule 42 (expression -> TRUE .)
    SUB             reduce using rule 42 (expression -> TRUE .)
    MULTIPLY        reduce using rule 42 (expression -> TRUE .)
    DIVIDE          reduce using rule 42 (expression -> TRUE .)
    RESTOF          reduce using rule 42 (expression -> TRUE .)
    SAMEAS          reduce using rule 42 (expression -> TRUE .)
    NEQUAL          reduce using rule 42 (expression -> TRUE .)
    HEQUAL          reduce using rule 42 (expression -> TRUE .)
    LEQUAL          reduce using rule 42 (expression -> TRUE .)
    HIGHER          reduce using rule 42 (expression -> TRUE .)
    LOWER           reduce using rule 42 (expression -> TRUE .)
    AND             reduce using rule 42 (expression -> TRUE .)
    OR              reduce using rule 42 (expression -> TRUE .)
    RETURN          reduce using rule 42 (expression -> TRUE .)
    IF              reduce using rule 42 (expression -> TRUE .)
    WHILE           reduce using rule 42 (expression -> TRUE .)
    NAME            reduce using rule 42 (expression -> TRUE .)
    TRUE            reduce using rule 42 (expression -> TRUE .)
    FALSE           reduce using rule 42 (expression -> TRUE .)
    DIFFER          reduce using rule 42 (expression -> TRUE .)
    NUMBER          reduce using rule 42 (expression -> TRUE .)
    FLOAT           reduce using rule 42 (expression -> TRUE .)
    STRING          reduce using rule 42 (expression -> TRUE .)
    RCURLY          reduce using rule 42 (expression -> TRUE .)
    SEMICOLON       reduce using rule 42 (expression -> TRUE .)
    LCURLY          reduce using rule 42 (expression -> TRUE .)
    RBRACK          reduce using rule 42 (expression -> TRUE .)
    COMMA           reduce using rule 42 (expression -> TRUE .)
    RPAR            reduce using rule 42 (expression -> TRUE .)


state 44

    (43) expression -> FALSE .

    SUM             reduce using rule 43 (expression -> FALSE .)
    SUB             reduce using rule 43 (expression -> FALSE .)
    MULTIPLY        reduce using rule 43 (expression -> FALSE .)
    DIVIDE          reduce using rule 43 (expression -> FALSE .)
    RESTOF          reduce using rule 43 (expression -> FALSE .)
    SAMEAS          reduce using rule 43 (expression -> FALSE .)
    NEQUAL          reduce using rule 43 (expression -> FALSE .)
    HEQUAL          reduce using rule 43 (expression -> FALSE .)
    LEQUAL          reduce using rule 43 (expression -> FALSE .)
    HIGHER          reduce using rule 43 (expression -> FALSE .)
    LOWER           reduce using rule 43 (expression -> FALSE .)
    AND             reduce using rule 43 (expression -> FALSE .)
    OR              reduce using rule 43 (expression -> FALSE .)
    RETURN          reduce using rule 43 (expression -> FALSE .)
    IF              reduce using rule 43 (expression -> FALSE .)
    WHILE           reduce using rule 43 (expression -> FALSE .)
    NAME            reduce using rule 43 (expression -> FALSE .)
    TRUE            reduce using rule 43 (expression -> FALSE .)
    FALSE           reduce using rule 43 (expression -> FALSE .)
    DIFFER          reduce using rule 43 (expression -> FALSE .)
    NUMBER          reduce using rule 43 (expression -> FALSE .)
    FLOAT           reduce using rule 43 (expression -> FALSE .)
    STRING          reduce using rule 43 (expression -> FALSE .)
    RCURLY          reduce using rule 43 (expression -> FALSE .)
    SEMICOLON       reduce using rule 43 (expression -> FALSE .)
    LCURLY          reduce using rule 43 (expression -> FALSE .)
    RBRACK          reduce using rule 43 (expression -> FALSE .)
    COMMA           reduce using rule 43 (expression -> FALSE .)
    RPAR            reduce using rule 43 (expression -> FALSE .)


state 45

    (44) expression -> DIFFER . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 72

state 46

    (45) expression -> NUMBER .

    SUM             reduce using rule 45 (expression -> NUMBER .)
    SUB             reduce using rule 45 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 45 (expression -> NUMBER .)
    DIVIDE          reduce using rule 45 (expression -> NUMBER .)
    RESTOF          reduce using rule 45 (expression -> NUMBER .)
    SAMEAS          reduce using rule 45 (expression -> NUMBER .)
    NEQUAL          reduce using rule 45 (expression -> NUMBER .)
    HEQUAL          reduce using rule 45 (expression -> NUMBER .)
    LEQUAL          reduce using rule 45 (expression -> NUMBER .)
    HIGHER          reduce using rule 45 (expression -> NUMBER .)
    LOWER           reduce using rule 45 (expression -> NUMBER .)
    AND             reduce using rule 45 (expression -> NUMBER .)
    OR              reduce using rule 45 (expression -> NUMBER .)
    RETURN          reduce using rule 45 (expression -> NUMBER .)
    IF              reduce using rule 45 (expression -> NUMBER .)
    WHILE           reduce using rule 45 (expression -> NUMBER .)
    NAME            reduce using rule 45 (expression -> NUMBER .)
    TRUE            reduce using rule 45 (expression -> NUMBER .)
    FALSE           reduce using rule 45 (expression -> NUMBER .)
    DIFFER          reduce using rule 45 (expression -> NUMBER .)
    NUMBER          reduce using rule 45 (expression -> NUMBER .)
    FLOAT           reduce using rule 45 (expression -> NUMBER .)
    STRING          reduce using rule 45 (expression -> NUMBER .)
    RCURLY          reduce using rule 45 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 45 (expression -> NUMBER .)
    LCURLY          reduce using rule 45 (expression -> NUMBER .)
    RBRACK          reduce using rule 45 (expression -> NUMBER .)
    COMMA           reduce using rule 45 (expression -> NUMBER .)
    RPAR            reduce using rule 45 (expression -> NUMBER .)


state 47

    (46) expression -> FLOAT .

    SUM             reduce using rule 46 (expression -> FLOAT .)
    SUB             reduce using rule 46 (expression -> FLOAT .)
    MULTIPLY        reduce using rule 46 (expression -> FLOAT .)
    DIVIDE          reduce using rule 46 (expression -> FLOAT .)
    RESTOF          reduce using rule 46 (expression -> FLOAT .)
    SAMEAS          reduce using rule 46 (expression -> FLOAT .)
    NEQUAL          reduce using rule 46 (expression -> FLOAT .)
    HEQUAL          reduce using rule 46 (expression -> FLOAT .)
    LEQUAL          reduce using rule 46 (expression -> FLOAT .)
    HIGHER          reduce using rule 46 (expression -> FLOAT .)
    LOWER           reduce using rule 46 (expression -> FLOAT .)
    AND             reduce using rule 46 (expression -> FLOAT .)
    OR              reduce using rule 46 (expression -> FLOAT .)
    RETURN          reduce using rule 46 (expression -> FLOAT .)
    IF              reduce using rule 46 (expression -> FLOAT .)
    WHILE           reduce using rule 46 (expression -> FLOAT .)
    NAME            reduce using rule 46 (expression -> FLOAT .)
    TRUE            reduce using rule 46 (expression -> FLOAT .)
    FALSE           reduce using rule 46 (expression -> FLOAT .)
    DIFFER          reduce using rule 46 (expression -> FLOAT .)
    NUMBER          reduce using rule 46 (expression -> FLOAT .)
    FLOAT           reduce using rule 46 (expression -> FLOAT .)
    STRING          reduce using rule 46 (expression -> FLOAT .)
    RCURLY          reduce using rule 46 (expression -> FLOAT .)
    SEMICOLON       reduce using rule 46 (expression -> FLOAT .)
    LCURLY          reduce using rule 46 (expression -> FLOAT .)
    RBRACK          reduce using rule 46 (expression -> FLOAT .)
    COMMA           reduce using rule 46 (expression -> FLOAT .)
    RPAR            reduce using rule 46 (expression -> FLOAT .)


state 48

    (16) block -> LCURLY block_content RCURLY .

    DECLARATION     reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    DEFINITION      reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    $end            reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    ELSE            reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    RETURN          reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    IF              reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    WHILE           reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    NAME            reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    TRUE            reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    FALSE           reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    DIFFER          reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    NUMBER          reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    FLOAT           reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    STRING          reduce using rule 16 (block -> LCURLY block_content RCURLY .)
    RCURLY          reduce using rule 16 (block -> LCURLY block_content RCURLY .)


state 49

    (18) block_content -> statement block_content .

    RCURLY          reduce using rule 18 (block_content -> statement block_content .)


state 50

    (19) statement -> RETURN SEMICOLON .

    RETURN          reduce using rule 19 (statement -> RETURN SEMICOLON .)
    IF              reduce using rule 19 (statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 19 (statement -> RETURN SEMICOLON .)
    NAME            reduce using rule 19 (statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 19 (statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 19 (statement -> RETURN SEMICOLON .)
    DIFFER          reduce using rule 19 (statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 19 (statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 19 (statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 19 (statement -> RETURN SEMICOLON .)
    RCURLY          reduce using rule 19 (statement -> RETURN SEMICOLON .)


state 51

    (20) statement -> RETURN expression . SEMICOLON
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SEMICOLON       shift and go to state 73
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 52

    (48) expression -> NAME .
    (49) expression -> NAME . LBRACK expression RBRACK
    (50) expression -> NAME . LPAR RPAR LBRACK expression RBRACK
    (51) expression -> NAME . LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> NAME . LPAR argument RPAR

    SEMICOLON       reduce using rule 48 (expression -> NAME .)
    SUM             reduce using rule 48 (expression -> NAME .)
    SUB             reduce using rule 48 (expression -> NAME .)
    MULTIPLY        reduce using rule 48 (expression -> NAME .)
    DIVIDE          reduce using rule 48 (expression -> NAME .)
    RESTOF          reduce using rule 48 (expression -> NAME .)
    SAMEAS          reduce using rule 48 (expression -> NAME .)
    NEQUAL          reduce using rule 48 (expression -> NAME .)
    HEQUAL          reduce using rule 48 (expression -> NAME .)
    LEQUAL          reduce using rule 48 (expression -> NAME .)
    HIGHER          reduce using rule 48 (expression -> NAME .)
    LOWER           reduce using rule 48 (expression -> NAME .)
    AND             reduce using rule 48 (expression -> NAME .)
    OR              reduce using rule 48 (expression -> NAME .)
    LCURLY          reduce using rule 48 (expression -> NAME .)
    RETURN          reduce using rule 48 (expression -> NAME .)
    IF              reduce using rule 48 (expression -> NAME .)
    WHILE           reduce using rule 48 (expression -> NAME .)
    NAME            reduce using rule 48 (expression -> NAME .)
    TRUE            reduce using rule 48 (expression -> NAME .)
    FALSE           reduce using rule 48 (expression -> NAME .)
    DIFFER          reduce using rule 48 (expression -> NAME .)
    NUMBER          reduce using rule 48 (expression -> NAME .)
    FLOAT           reduce using rule 48 (expression -> NAME .)
    STRING          reduce using rule 48 (expression -> NAME .)
    RCURLY          reduce using rule 48 (expression -> NAME .)
    RBRACK          reduce using rule 48 (expression -> NAME .)
    COMMA           reduce using rule 48 (expression -> NAME .)
    RPAR            reduce using rule 48 (expression -> NAME .)
    LBRACK          shift and go to state 70
    LPAR            shift and go to state 71


state 53

    (29) expression -> expression SUM . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 74

state 54

    (30) expression -> expression SUB . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 75

state 55

    (31) expression -> expression MULTIPLY . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 76

state 56

    (32) expression -> expression DIVIDE . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 77

state 57

    (33) expression -> expression RESTOF . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 78

state 58

    (34) expression -> expression SAMEAS . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 79

state 59

    (35) expression -> expression NEQUAL . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 80

state 60

    (36) expression -> expression HEQUAL . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 81

state 61

    (37) expression -> expression LEQUAL . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 82

state 62

    (38) expression -> expression HIGHER . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 83

state 63

    (39) expression -> expression LOWER . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 84

state 64

    (40) expression -> expression AND . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 85

state 65

    (41) expression -> expression OR . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 86

state 66

    (21) statement -> IF expression . block
    (22) statement -> IF expression . block ELSE block
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (15) block -> . LCURLY RCURLY
    (16) block -> . LCURLY block_content RCURLY

    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    LCURLY          shift and go to state 32

    block                          shift and go to state 87

state 67

    (23) statement -> WHILE expression . block
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (15) block -> . LCURLY RCURLY
    (16) block -> . LCURLY block_content RCURLY

    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    LCURLY          shift and go to state 32

    block                          shift and go to state 88

state 68

    (24) statement -> NAME COLON . types EQUALS expression SEMICOLON
    (25) statement -> NAME COLON . types EQUALS QMARK STRING QMARK SEMICOLON
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    INT             shift and go to state 19
    FLOATTYPE       shift and go to state 20
    BOOL            shift and go to state 21
    STRINGTYPE      shift and go to state 22

    types                          shift and go to state 89

state 69

    (26) statement -> NAME EQUALS . expression SEMICOLON
    (27) statement -> NAME EQUALS . QMARK STRING QMARK SEMICOLON
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    QMARK           shift and go to state 91
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 90

state 70

    (49) expression -> NAME LBRACK . expression RBRACK
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 92

state 71

    (50) expression -> NAME LPAR . RPAR LBRACK expression RBRACK
    (51) expression -> NAME LPAR . argument RPAR LBRACK expression RBRACK
    (52) expression -> NAME LPAR . argument RPAR
    (53) argument -> . expression
    (54) argument -> . expression COMMA expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    RPAR            shift and go to state 93
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 94
    argument                       shift and go to state 95

state 72

    (44) expression -> DIFFER expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SAMEAS          reduce using rule 44 (expression -> DIFFER expression .)
    NEQUAL          reduce using rule 44 (expression -> DIFFER expression .)
    HEQUAL          reduce using rule 44 (expression -> DIFFER expression .)
    LEQUAL          reduce using rule 44 (expression -> DIFFER expression .)
    HIGHER          reduce using rule 44 (expression -> DIFFER expression .)
    LOWER           reduce using rule 44 (expression -> DIFFER expression .)
    AND             reduce using rule 44 (expression -> DIFFER expression .)
    OR              reduce using rule 44 (expression -> DIFFER expression .)
    RETURN          reduce using rule 44 (expression -> DIFFER expression .)
    IF              reduce using rule 44 (expression -> DIFFER expression .)
    WHILE           reduce using rule 44 (expression -> DIFFER expression .)
    NAME            reduce using rule 44 (expression -> DIFFER expression .)
    TRUE            reduce using rule 44 (expression -> DIFFER expression .)
    FALSE           reduce using rule 44 (expression -> DIFFER expression .)
    DIFFER          reduce using rule 44 (expression -> DIFFER expression .)
    NUMBER          reduce using rule 44 (expression -> DIFFER expression .)
    FLOAT           reduce using rule 44 (expression -> DIFFER expression .)
    STRING          reduce using rule 44 (expression -> DIFFER expression .)
    RCURLY          reduce using rule 44 (expression -> DIFFER expression .)
    SEMICOLON       reduce using rule 44 (expression -> DIFFER expression .)
    LCURLY          reduce using rule 44 (expression -> DIFFER expression .)
    RBRACK          reduce using rule 44 (expression -> DIFFER expression .)
    COMMA           reduce using rule 44 (expression -> DIFFER expression .)
    RPAR            reduce using rule 44 (expression -> DIFFER expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! SUM             [ reduce using rule 44 (expression -> DIFFER expression .) ]
  ! SUB             [ reduce using rule 44 (expression -> DIFFER expression .) ]
  ! MULTIPLY        [ reduce using rule 44 (expression -> DIFFER expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> DIFFER expression .) ]
  ! RESTOF          [ reduce using rule 44 (expression -> DIFFER expression .) ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 73

    (20) statement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    NAME            reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    DIFFER          reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 20 (statement -> RETURN expression SEMICOLON .)
    RCURLY          reduce using rule 20 (statement -> RETURN expression SEMICOLON .)


state 74

    (29) expression -> expression SUM expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SUM             reduce using rule 29 (expression -> expression SUM expression .)
    SUB             reduce using rule 29 (expression -> expression SUM expression .)
    SAMEAS          reduce using rule 29 (expression -> expression SUM expression .)
    NEQUAL          reduce using rule 29 (expression -> expression SUM expression .)
    HEQUAL          reduce using rule 29 (expression -> expression SUM expression .)
    LEQUAL          reduce using rule 29 (expression -> expression SUM expression .)
    HIGHER          reduce using rule 29 (expression -> expression SUM expression .)
    LOWER           reduce using rule 29 (expression -> expression SUM expression .)
    AND             reduce using rule 29 (expression -> expression SUM expression .)
    OR              reduce using rule 29 (expression -> expression SUM expression .)
    RETURN          reduce using rule 29 (expression -> expression SUM expression .)
    IF              reduce using rule 29 (expression -> expression SUM expression .)
    WHILE           reduce using rule 29 (expression -> expression SUM expression .)
    NAME            reduce using rule 29 (expression -> expression SUM expression .)
    TRUE            reduce using rule 29 (expression -> expression SUM expression .)
    FALSE           reduce using rule 29 (expression -> expression SUM expression .)
    DIFFER          reduce using rule 29 (expression -> expression SUM expression .)
    NUMBER          reduce using rule 29 (expression -> expression SUM expression .)
    FLOAT           reduce using rule 29 (expression -> expression SUM expression .)
    STRING          reduce using rule 29 (expression -> expression SUM expression .)
    RCURLY          reduce using rule 29 (expression -> expression SUM expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression SUM expression .)
    LCURLY          reduce using rule 29 (expression -> expression SUM expression .)
    RBRACK          reduce using rule 29 (expression -> expression SUM expression .)
    COMMA           reduce using rule 29 (expression -> expression SUM expression .)
    RPAR            reduce using rule 29 (expression -> expression SUM expression .)
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! MULTIPLY        [ reduce using rule 29 (expression -> expression SUM expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression SUM expression .) ]
  ! RESTOF          [ reduce using rule 29 (expression -> expression SUM expression .) ]
  ! SUM             [ shift and go to state 53 ]
  ! SUB             [ shift and go to state 54 ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 75

    (30) expression -> expression SUB expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SUM             reduce using rule 30 (expression -> expression SUB expression .)
    SUB             reduce using rule 30 (expression -> expression SUB expression .)
    SAMEAS          reduce using rule 30 (expression -> expression SUB expression .)
    NEQUAL          reduce using rule 30 (expression -> expression SUB expression .)
    HEQUAL          reduce using rule 30 (expression -> expression SUB expression .)
    LEQUAL          reduce using rule 30 (expression -> expression SUB expression .)
    HIGHER          reduce using rule 30 (expression -> expression SUB expression .)
    LOWER           reduce using rule 30 (expression -> expression SUB expression .)
    AND             reduce using rule 30 (expression -> expression SUB expression .)
    OR              reduce using rule 30 (expression -> expression SUB expression .)
    RETURN          reduce using rule 30 (expression -> expression SUB expression .)
    IF              reduce using rule 30 (expression -> expression SUB expression .)
    WHILE           reduce using rule 30 (expression -> expression SUB expression .)
    NAME            reduce using rule 30 (expression -> expression SUB expression .)
    TRUE            reduce using rule 30 (expression -> expression SUB expression .)
    FALSE           reduce using rule 30 (expression -> expression SUB expression .)
    DIFFER          reduce using rule 30 (expression -> expression SUB expression .)
    NUMBER          reduce using rule 30 (expression -> expression SUB expression .)
    FLOAT           reduce using rule 30 (expression -> expression SUB expression .)
    STRING          reduce using rule 30 (expression -> expression SUB expression .)
    RCURLY          reduce using rule 30 (expression -> expression SUB expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression SUB expression .)
    LCURLY          reduce using rule 30 (expression -> expression SUB expression .)
    RBRACK          reduce using rule 30 (expression -> expression SUB expression .)
    COMMA           reduce using rule 30 (expression -> expression SUB expression .)
    RPAR            reduce using rule 30 (expression -> expression SUB expression .)
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! MULTIPLY        [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! RESTOF          [ reduce using rule 30 (expression -> expression SUB expression .) ]
  ! SUM             [ shift and go to state 53 ]
  ! SUB             [ shift and go to state 54 ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 76

    (31) expression -> expression MULTIPLY expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SUM             reduce using rule 31 (expression -> expression MULTIPLY expression .)
    SUB             reduce using rule 31 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 31 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    RESTOF          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    SAMEAS          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    NEQUAL          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    HEQUAL          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    LEQUAL          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    HIGHER          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    LOWER           reduce using rule 31 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 31 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 31 (expression -> expression MULTIPLY expression .)
    RETURN          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 31 (expression -> expression MULTIPLY expression .)
    WHILE           reduce using rule 31 (expression -> expression MULTIPLY expression .)
    NAME            reduce using rule 31 (expression -> expression MULTIPLY expression .)
    TRUE            reduce using rule 31 (expression -> expression MULTIPLY expression .)
    FALSE           reduce using rule 31 (expression -> expression MULTIPLY expression .)
    DIFFER          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    NUMBER          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    FLOAT           reduce using rule 31 (expression -> expression MULTIPLY expression .)
    STRING          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    RCURLY          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression MULTIPLY expression .)
    LCURLY          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    RBRACK          reduce using rule 31 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 31 (expression -> expression MULTIPLY expression .)
    RPAR            reduce using rule 31 (expression -> expression MULTIPLY expression .)

  ! SUM             [ shift and go to state 53 ]
  ! SUB             [ shift and go to state 54 ]
  ! MULTIPLY        [ shift and go to state 55 ]
  ! DIVIDE          [ shift and go to state 56 ]
  ! RESTOF          [ shift and go to state 57 ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 77

    (32) expression -> expression DIVIDE expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SUM             reduce using rule 32 (expression -> expression DIVIDE expression .)
    SUB             reduce using rule 32 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression DIVIDE expression .)
    RESTOF          reduce using rule 32 (expression -> expression DIVIDE expression .)
    SAMEAS          reduce using rule 32 (expression -> expression DIVIDE expression .)
    NEQUAL          reduce using rule 32 (expression -> expression DIVIDE expression .)
    HEQUAL          reduce using rule 32 (expression -> expression DIVIDE expression .)
    LEQUAL          reduce using rule 32 (expression -> expression DIVIDE expression .)
    HIGHER          reduce using rule 32 (expression -> expression DIVIDE expression .)
    LOWER           reduce using rule 32 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 32 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 32 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 32 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 32 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 32 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 32 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 32 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 32 (expression -> expression DIVIDE expression .)
    DIFFER          reduce using rule 32 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 32 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 32 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 32 (expression -> expression DIVIDE expression .)
    RCURLY          reduce using rule 32 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression DIVIDE expression .)
    LCURLY          reduce using rule 32 (expression -> expression DIVIDE expression .)
    RBRACK          reduce using rule 32 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 32 (expression -> expression DIVIDE expression .)
    RPAR            reduce using rule 32 (expression -> expression DIVIDE expression .)

  ! SUM             [ shift and go to state 53 ]
  ! SUB             [ shift and go to state 54 ]
  ! MULTIPLY        [ shift and go to state 55 ]
  ! DIVIDE          [ shift and go to state 56 ]
  ! RESTOF          [ shift and go to state 57 ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 78

    (33) expression -> expression RESTOF expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SUM             reduce using rule 33 (expression -> expression RESTOF expression .)
    SUB             reduce using rule 33 (expression -> expression RESTOF expression .)
    MULTIPLY        reduce using rule 33 (expression -> expression RESTOF expression .)
    DIVIDE          reduce using rule 33 (expression -> expression RESTOF expression .)
    RESTOF          reduce using rule 33 (expression -> expression RESTOF expression .)
    SAMEAS          reduce using rule 33 (expression -> expression RESTOF expression .)
    NEQUAL          reduce using rule 33 (expression -> expression RESTOF expression .)
    HEQUAL          reduce using rule 33 (expression -> expression RESTOF expression .)
    LEQUAL          reduce using rule 33 (expression -> expression RESTOF expression .)
    HIGHER          reduce using rule 33 (expression -> expression RESTOF expression .)
    LOWER           reduce using rule 33 (expression -> expression RESTOF expression .)
    AND             reduce using rule 33 (expression -> expression RESTOF expression .)
    OR              reduce using rule 33 (expression -> expression RESTOF expression .)
    RETURN          reduce using rule 33 (expression -> expression RESTOF expression .)
    IF              reduce using rule 33 (expression -> expression RESTOF expression .)
    WHILE           reduce using rule 33 (expression -> expression RESTOF expression .)
    NAME            reduce using rule 33 (expression -> expression RESTOF expression .)
    TRUE            reduce using rule 33 (expression -> expression RESTOF expression .)
    FALSE           reduce using rule 33 (expression -> expression RESTOF expression .)
    DIFFER          reduce using rule 33 (expression -> expression RESTOF expression .)
    NUMBER          reduce using rule 33 (expression -> expression RESTOF expression .)
    FLOAT           reduce using rule 33 (expression -> expression RESTOF expression .)
    STRING          reduce using rule 33 (expression -> expression RESTOF expression .)
    RCURLY          reduce using rule 33 (expression -> expression RESTOF expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression RESTOF expression .)
    LCURLY          reduce using rule 33 (expression -> expression RESTOF expression .)
    RBRACK          reduce using rule 33 (expression -> expression RESTOF expression .)
    COMMA           reduce using rule 33 (expression -> expression RESTOF expression .)
    RPAR            reduce using rule 33 (expression -> expression RESTOF expression .)

  ! SUM             [ shift and go to state 53 ]
  ! SUB             [ shift and go to state 54 ]
  ! MULTIPLY        [ shift and go to state 55 ]
  ! DIVIDE          [ shift and go to state 56 ]
  ! RESTOF          [ shift and go to state 57 ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 79

    (34) expression -> expression SAMEAS expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SAMEAS          reduce using rule 34 (expression -> expression SAMEAS expression .)
    NEQUAL          reduce using rule 34 (expression -> expression SAMEAS expression .)
    HEQUAL          reduce using rule 34 (expression -> expression SAMEAS expression .)
    LEQUAL          reduce using rule 34 (expression -> expression SAMEAS expression .)
    HIGHER          reduce using rule 34 (expression -> expression SAMEAS expression .)
    LOWER           reduce using rule 34 (expression -> expression SAMEAS expression .)
    AND             reduce using rule 34 (expression -> expression SAMEAS expression .)
    OR              reduce using rule 34 (expression -> expression SAMEAS expression .)
    RETURN          reduce using rule 34 (expression -> expression SAMEAS expression .)
    IF              reduce using rule 34 (expression -> expression SAMEAS expression .)
    WHILE           reduce using rule 34 (expression -> expression SAMEAS expression .)
    NAME            reduce using rule 34 (expression -> expression SAMEAS expression .)
    TRUE            reduce using rule 34 (expression -> expression SAMEAS expression .)
    FALSE           reduce using rule 34 (expression -> expression SAMEAS expression .)
    DIFFER          reduce using rule 34 (expression -> expression SAMEAS expression .)
    NUMBER          reduce using rule 34 (expression -> expression SAMEAS expression .)
    FLOAT           reduce using rule 34 (expression -> expression SAMEAS expression .)
    STRING          reduce using rule 34 (expression -> expression SAMEAS expression .)
    RCURLY          reduce using rule 34 (expression -> expression SAMEAS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression SAMEAS expression .)
    LCURLY          reduce using rule 34 (expression -> expression SAMEAS expression .)
    RBRACK          reduce using rule 34 (expression -> expression SAMEAS expression .)
    COMMA           reduce using rule 34 (expression -> expression SAMEAS expression .)
    RPAR            reduce using rule 34 (expression -> expression SAMEAS expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! SUM             [ reduce using rule 34 (expression -> expression SAMEAS expression .) ]
  ! SUB             [ reduce using rule 34 (expression -> expression SAMEAS expression .) ]
  ! MULTIPLY        [ reduce using rule 34 (expression -> expression SAMEAS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression SAMEAS expression .) ]
  ! RESTOF          [ reduce using rule 34 (expression -> expression SAMEAS expression .) ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 80

    (35) expression -> expression NEQUAL expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SAMEAS          reduce using rule 35 (expression -> expression NEQUAL expression .)
    NEQUAL          reduce using rule 35 (expression -> expression NEQUAL expression .)
    HEQUAL          reduce using rule 35 (expression -> expression NEQUAL expression .)
    LEQUAL          reduce using rule 35 (expression -> expression NEQUAL expression .)
    HIGHER          reduce using rule 35 (expression -> expression NEQUAL expression .)
    LOWER           reduce using rule 35 (expression -> expression NEQUAL expression .)
    AND             reduce using rule 35 (expression -> expression NEQUAL expression .)
    OR              reduce using rule 35 (expression -> expression NEQUAL expression .)
    RETURN          reduce using rule 35 (expression -> expression NEQUAL expression .)
    IF              reduce using rule 35 (expression -> expression NEQUAL expression .)
    WHILE           reduce using rule 35 (expression -> expression NEQUAL expression .)
    NAME            reduce using rule 35 (expression -> expression NEQUAL expression .)
    TRUE            reduce using rule 35 (expression -> expression NEQUAL expression .)
    FALSE           reduce using rule 35 (expression -> expression NEQUAL expression .)
    DIFFER          reduce using rule 35 (expression -> expression NEQUAL expression .)
    NUMBER          reduce using rule 35 (expression -> expression NEQUAL expression .)
    FLOAT           reduce using rule 35 (expression -> expression NEQUAL expression .)
    STRING          reduce using rule 35 (expression -> expression NEQUAL expression .)
    RCURLY          reduce using rule 35 (expression -> expression NEQUAL expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression NEQUAL expression .)
    LCURLY          reduce using rule 35 (expression -> expression NEQUAL expression .)
    RBRACK          reduce using rule 35 (expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 35 (expression -> expression NEQUAL expression .)
    RPAR            reduce using rule 35 (expression -> expression NEQUAL expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! SUM             [ reduce using rule 35 (expression -> expression NEQUAL expression .) ]
  ! SUB             [ reduce using rule 35 (expression -> expression NEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 35 (expression -> expression NEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression NEQUAL expression .) ]
  ! RESTOF          [ reduce using rule 35 (expression -> expression NEQUAL expression .) ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 81

    (36) expression -> expression HEQUAL expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SAMEAS          reduce using rule 36 (expression -> expression HEQUAL expression .)
    NEQUAL          reduce using rule 36 (expression -> expression HEQUAL expression .)
    HEQUAL          reduce using rule 36 (expression -> expression HEQUAL expression .)
    LEQUAL          reduce using rule 36 (expression -> expression HEQUAL expression .)
    HIGHER          reduce using rule 36 (expression -> expression HEQUAL expression .)
    LOWER           reduce using rule 36 (expression -> expression HEQUAL expression .)
    AND             reduce using rule 36 (expression -> expression HEQUAL expression .)
    OR              reduce using rule 36 (expression -> expression HEQUAL expression .)
    RETURN          reduce using rule 36 (expression -> expression HEQUAL expression .)
    IF              reduce using rule 36 (expression -> expression HEQUAL expression .)
    WHILE           reduce using rule 36 (expression -> expression HEQUAL expression .)
    NAME            reduce using rule 36 (expression -> expression HEQUAL expression .)
    TRUE            reduce using rule 36 (expression -> expression HEQUAL expression .)
    FALSE           reduce using rule 36 (expression -> expression HEQUAL expression .)
    DIFFER          reduce using rule 36 (expression -> expression HEQUAL expression .)
    NUMBER          reduce using rule 36 (expression -> expression HEQUAL expression .)
    FLOAT           reduce using rule 36 (expression -> expression HEQUAL expression .)
    STRING          reduce using rule 36 (expression -> expression HEQUAL expression .)
    RCURLY          reduce using rule 36 (expression -> expression HEQUAL expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression HEQUAL expression .)
    LCURLY          reduce using rule 36 (expression -> expression HEQUAL expression .)
    RBRACK          reduce using rule 36 (expression -> expression HEQUAL expression .)
    COMMA           reduce using rule 36 (expression -> expression HEQUAL expression .)
    RPAR            reduce using rule 36 (expression -> expression HEQUAL expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! SUM             [ reduce using rule 36 (expression -> expression HEQUAL expression .) ]
  ! SUB             [ reduce using rule 36 (expression -> expression HEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 36 (expression -> expression HEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression HEQUAL expression .) ]
  ! RESTOF          [ reduce using rule 36 (expression -> expression HEQUAL expression .) ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 82

    (37) expression -> expression LEQUAL expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SAMEAS          reduce using rule 37 (expression -> expression LEQUAL expression .)
    NEQUAL          reduce using rule 37 (expression -> expression LEQUAL expression .)
    HEQUAL          reduce using rule 37 (expression -> expression LEQUAL expression .)
    LEQUAL          reduce using rule 37 (expression -> expression LEQUAL expression .)
    HIGHER          reduce using rule 37 (expression -> expression LEQUAL expression .)
    LOWER           reduce using rule 37 (expression -> expression LEQUAL expression .)
    AND             reduce using rule 37 (expression -> expression LEQUAL expression .)
    OR              reduce using rule 37 (expression -> expression LEQUAL expression .)
    RETURN          reduce using rule 37 (expression -> expression LEQUAL expression .)
    IF              reduce using rule 37 (expression -> expression LEQUAL expression .)
    WHILE           reduce using rule 37 (expression -> expression LEQUAL expression .)
    NAME            reduce using rule 37 (expression -> expression LEQUAL expression .)
    TRUE            reduce using rule 37 (expression -> expression LEQUAL expression .)
    FALSE           reduce using rule 37 (expression -> expression LEQUAL expression .)
    DIFFER          reduce using rule 37 (expression -> expression LEQUAL expression .)
    NUMBER          reduce using rule 37 (expression -> expression LEQUAL expression .)
    FLOAT           reduce using rule 37 (expression -> expression LEQUAL expression .)
    STRING          reduce using rule 37 (expression -> expression LEQUAL expression .)
    RCURLY          reduce using rule 37 (expression -> expression LEQUAL expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression LEQUAL expression .)
    LCURLY          reduce using rule 37 (expression -> expression LEQUAL expression .)
    RBRACK          reduce using rule 37 (expression -> expression LEQUAL expression .)
    COMMA           reduce using rule 37 (expression -> expression LEQUAL expression .)
    RPAR            reduce using rule 37 (expression -> expression LEQUAL expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! SUM             [ reduce using rule 37 (expression -> expression LEQUAL expression .) ]
  ! SUB             [ reduce using rule 37 (expression -> expression LEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 37 (expression -> expression LEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression LEQUAL expression .) ]
  ! RESTOF          [ reduce using rule 37 (expression -> expression LEQUAL expression .) ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 83

    (38) expression -> expression HIGHER expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SAMEAS          reduce using rule 38 (expression -> expression HIGHER expression .)
    NEQUAL          reduce using rule 38 (expression -> expression HIGHER expression .)
    HEQUAL          reduce using rule 38 (expression -> expression HIGHER expression .)
    LEQUAL          reduce using rule 38 (expression -> expression HIGHER expression .)
    HIGHER          reduce using rule 38 (expression -> expression HIGHER expression .)
    LOWER           reduce using rule 38 (expression -> expression HIGHER expression .)
    AND             reduce using rule 38 (expression -> expression HIGHER expression .)
    OR              reduce using rule 38 (expression -> expression HIGHER expression .)
    RETURN          reduce using rule 38 (expression -> expression HIGHER expression .)
    IF              reduce using rule 38 (expression -> expression HIGHER expression .)
    WHILE           reduce using rule 38 (expression -> expression HIGHER expression .)
    NAME            reduce using rule 38 (expression -> expression HIGHER expression .)
    TRUE            reduce using rule 38 (expression -> expression HIGHER expression .)
    FALSE           reduce using rule 38 (expression -> expression HIGHER expression .)
    DIFFER          reduce using rule 38 (expression -> expression HIGHER expression .)
    NUMBER          reduce using rule 38 (expression -> expression HIGHER expression .)
    FLOAT           reduce using rule 38 (expression -> expression HIGHER expression .)
    STRING          reduce using rule 38 (expression -> expression HIGHER expression .)
    RCURLY          reduce using rule 38 (expression -> expression HIGHER expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression HIGHER expression .)
    LCURLY          reduce using rule 38 (expression -> expression HIGHER expression .)
    RBRACK          reduce using rule 38 (expression -> expression HIGHER expression .)
    COMMA           reduce using rule 38 (expression -> expression HIGHER expression .)
    RPAR            reduce using rule 38 (expression -> expression HIGHER expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! SUM             [ reduce using rule 38 (expression -> expression HIGHER expression .) ]
  ! SUB             [ reduce using rule 38 (expression -> expression HIGHER expression .) ]
  ! MULTIPLY        [ reduce using rule 38 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression HIGHER expression .) ]
  ! RESTOF          [ reduce using rule 38 (expression -> expression HIGHER expression .) ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 84

    (39) expression -> expression LOWER expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SAMEAS          reduce using rule 39 (expression -> expression LOWER expression .)
    NEQUAL          reduce using rule 39 (expression -> expression LOWER expression .)
    HEQUAL          reduce using rule 39 (expression -> expression LOWER expression .)
    LEQUAL          reduce using rule 39 (expression -> expression LOWER expression .)
    HIGHER          reduce using rule 39 (expression -> expression LOWER expression .)
    LOWER           reduce using rule 39 (expression -> expression LOWER expression .)
    AND             reduce using rule 39 (expression -> expression LOWER expression .)
    OR              reduce using rule 39 (expression -> expression LOWER expression .)
    RETURN          reduce using rule 39 (expression -> expression LOWER expression .)
    IF              reduce using rule 39 (expression -> expression LOWER expression .)
    WHILE           reduce using rule 39 (expression -> expression LOWER expression .)
    NAME            reduce using rule 39 (expression -> expression LOWER expression .)
    TRUE            reduce using rule 39 (expression -> expression LOWER expression .)
    FALSE           reduce using rule 39 (expression -> expression LOWER expression .)
    DIFFER          reduce using rule 39 (expression -> expression LOWER expression .)
    NUMBER          reduce using rule 39 (expression -> expression LOWER expression .)
    FLOAT           reduce using rule 39 (expression -> expression LOWER expression .)
    STRING          reduce using rule 39 (expression -> expression LOWER expression .)
    RCURLY          reduce using rule 39 (expression -> expression LOWER expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression LOWER expression .)
    LCURLY          reduce using rule 39 (expression -> expression LOWER expression .)
    RBRACK          reduce using rule 39 (expression -> expression LOWER expression .)
    COMMA           reduce using rule 39 (expression -> expression LOWER expression .)
    RPAR            reduce using rule 39 (expression -> expression LOWER expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57

  ! SUM             [ reduce using rule 39 (expression -> expression LOWER expression .) ]
  ! SUB             [ reduce using rule 39 (expression -> expression LOWER expression .) ]
  ! MULTIPLY        [ reduce using rule 39 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression LOWER expression .) ]
  ! RESTOF          [ reduce using rule 39 (expression -> expression LOWER expression .) ]
  ! SAMEAS          [ shift and go to state 58 ]
  ! NEQUAL          [ shift and go to state 59 ]
  ! HEQUAL          [ shift and go to state 60 ]
  ! LEQUAL          [ shift and go to state 61 ]
  ! HIGHER          [ shift and go to state 62 ]
  ! LOWER           [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 85

    (40) expression -> expression AND expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    AND             reduce using rule 40 (expression -> expression AND expression .)
    OR              reduce using rule 40 (expression -> expression AND expression .)
    RETURN          reduce using rule 40 (expression -> expression AND expression .)
    IF              reduce using rule 40 (expression -> expression AND expression .)
    WHILE           reduce using rule 40 (expression -> expression AND expression .)
    NAME            reduce using rule 40 (expression -> expression AND expression .)
    TRUE            reduce using rule 40 (expression -> expression AND expression .)
    FALSE           reduce using rule 40 (expression -> expression AND expression .)
    DIFFER          reduce using rule 40 (expression -> expression AND expression .)
    NUMBER          reduce using rule 40 (expression -> expression AND expression .)
    FLOAT           reduce using rule 40 (expression -> expression AND expression .)
    STRING          reduce using rule 40 (expression -> expression AND expression .)
    RCURLY          reduce using rule 40 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression AND expression .)
    LCURLY          reduce using rule 40 (expression -> expression AND expression .)
    RBRACK          reduce using rule 40 (expression -> expression AND expression .)
    COMMA           reduce using rule 40 (expression -> expression AND expression .)
    RPAR            reduce using rule 40 (expression -> expression AND expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63

  ! SUM             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! SUB             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! RESTOF          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! SAMEAS          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! NEQUAL          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! HEQUAL          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! LEQUAL          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 86

    (41) expression -> expression OR expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    AND             reduce using rule 41 (expression -> expression OR expression .)
    OR              reduce using rule 41 (expression -> expression OR expression .)
    RETURN          reduce using rule 41 (expression -> expression OR expression .)
    IF              reduce using rule 41 (expression -> expression OR expression .)
    WHILE           reduce using rule 41 (expression -> expression OR expression .)
    NAME            reduce using rule 41 (expression -> expression OR expression .)
    TRUE            reduce using rule 41 (expression -> expression OR expression .)
    FALSE           reduce using rule 41 (expression -> expression OR expression .)
    DIFFER          reduce using rule 41 (expression -> expression OR expression .)
    NUMBER          reduce using rule 41 (expression -> expression OR expression .)
    FLOAT           reduce using rule 41 (expression -> expression OR expression .)
    STRING          reduce using rule 41 (expression -> expression OR expression .)
    RCURLY          reduce using rule 41 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression OR expression .)
    LCURLY          reduce using rule 41 (expression -> expression OR expression .)
    RBRACK          reduce using rule 41 (expression -> expression OR expression .)
    COMMA           reduce using rule 41 (expression -> expression OR expression .)
    RPAR            reduce using rule 41 (expression -> expression OR expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63

  ! SUM             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! SUB             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! RESTOF          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! SAMEAS          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! NEQUAL          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! HEQUAL          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! LEQUAL          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]


state 87

    (21) statement -> IF expression block .
    (22) statement -> IF expression block . ELSE block

    RETURN          reduce using rule 21 (statement -> IF expression block .)
    IF              reduce using rule 21 (statement -> IF expression block .)
    WHILE           reduce using rule 21 (statement -> IF expression block .)
    NAME            reduce using rule 21 (statement -> IF expression block .)
    TRUE            reduce using rule 21 (statement -> IF expression block .)
    FALSE           reduce using rule 21 (statement -> IF expression block .)
    DIFFER          reduce using rule 21 (statement -> IF expression block .)
    NUMBER          reduce using rule 21 (statement -> IF expression block .)
    FLOAT           reduce using rule 21 (statement -> IF expression block .)
    STRING          reduce using rule 21 (statement -> IF expression block .)
    RCURLY          reduce using rule 21 (statement -> IF expression block .)
    ELSE            shift and go to state 96


state 88

    (23) statement -> WHILE expression block .

    RETURN          reduce using rule 23 (statement -> WHILE expression block .)
    IF              reduce using rule 23 (statement -> WHILE expression block .)
    WHILE           reduce using rule 23 (statement -> WHILE expression block .)
    NAME            reduce using rule 23 (statement -> WHILE expression block .)
    TRUE            reduce using rule 23 (statement -> WHILE expression block .)
    FALSE           reduce using rule 23 (statement -> WHILE expression block .)
    DIFFER          reduce using rule 23 (statement -> WHILE expression block .)
    NUMBER          reduce using rule 23 (statement -> WHILE expression block .)
    FLOAT           reduce using rule 23 (statement -> WHILE expression block .)
    STRING          reduce using rule 23 (statement -> WHILE expression block .)
    RCURLY          reduce using rule 23 (statement -> WHILE expression block .)


state 89

    (24) statement -> NAME COLON types . EQUALS expression SEMICOLON
    (25) statement -> NAME COLON types . EQUALS QMARK STRING QMARK SEMICOLON

    EQUALS          shift and go to state 97


state 90

    (26) statement -> NAME EQUALS expression . SEMICOLON
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SEMICOLON       shift and go to state 98
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 91

    (27) statement -> NAME EQUALS QMARK . STRING QMARK SEMICOLON

    STRING          shift and go to state 99


state 92

    (49) expression -> NAME LBRACK expression . RBRACK
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    RBRACK          shift and go to state 100
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 93

    (50) expression -> NAME LPAR RPAR . LBRACK expression RBRACK

    LBRACK          shift and go to state 101


state 94

    (53) argument -> expression .
    (54) argument -> expression . COMMA expression
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    RPAR            reduce using rule 53 (argument -> expression .)
    COMMA           shift and go to state 102
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 95

    (51) expression -> NAME LPAR argument . RPAR LBRACK expression RBRACK
    (52) expression -> NAME LPAR argument . RPAR

    RPAR            shift and go to state 103


state 96

    (22) statement -> IF expression block ELSE . block
    (15) block -> . LCURLY RCURLY
    (16) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 32

    block                          shift and go to state 104

state 97

    (24) statement -> NAME COLON types EQUALS . expression SEMICOLON
    (25) statement -> NAME COLON types EQUALS . QMARK STRING QMARK SEMICOLON
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    QMARK           shift and go to state 106
    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 105

state 98

    (26) statement -> NAME EQUALS expression SEMICOLON .

    RETURN          reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    IF              reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    NAME            reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    DIFFER          reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    STRING          reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)
    RCURLY          reduce using rule 26 (statement -> NAME EQUALS expression SEMICOLON .)


state 99

    (27) statement -> NAME EQUALS QMARK STRING . QMARK SEMICOLON

    QMARK           shift and go to state 107


state 100

    (49) expression -> NAME LBRACK expression RBRACK .

    SUM             reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    SUB             reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    MULTIPLY        reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    RESTOF          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    SAMEAS          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    NEQUAL          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    HEQUAL          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    LEQUAL          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    HIGHER          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    LOWER           reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    AND             reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    OR              reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    RETURN          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    IF              reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    WHILE           reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    NAME            reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    TRUE            reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    FALSE           reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    DIFFER          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    NUMBER          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    FLOAT           reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    STRING          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    RCURLY          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    LCURLY          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    RBRACK          reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    COMMA           reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)
    RPAR            reduce using rule 49 (expression -> NAME LBRACK expression RBRACK .)


state 101

    (50) expression -> NAME LPAR RPAR LBRACK . expression RBRACK
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 108

state 102

    (54) argument -> expression COMMA . expression
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 109

state 103

    (51) expression -> NAME LPAR argument RPAR . LBRACK expression RBRACK
    (52) expression -> NAME LPAR argument RPAR .

    LBRACK          shift and go to state 110
    SUM             reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    SUB             reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    MULTIPLY        reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    DIVIDE          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    RESTOF          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    SAMEAS          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    NEQUAL          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    HEQUAL          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    LEQUAL          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    HIGHER          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    LOWER           reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    AND             reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    OR              reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    RETURN          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    IF              reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    WHILE           reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    NAME            reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    TRUE            reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    FALSE           reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    DIFFER          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    NUMBER          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    FLOAT           reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    STRING          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    RCURLY          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    SEMICOLON       reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    LCURLY          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    RBRACK          reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    COMMA           reduce using rule 52 (expression -> NAME LPAR argument RPAR .)
    RPAR            reduce using rule 52 (expression -> NAME LPAR argument RPAR .)


state 104

    (22) statement -> IF expression block ELSE block .

    RETURN          reduce using rule 22 (statement -> IF expression block ELSE block .)
    IF              reduce using rule 22 (statement -> IF expression block ELSE block .)
    WHILE           reduce using rule 22 (statement -> IF expression block ELSE block .)
    NAME            reduce using rule 22 (statement -> IF expression block ELSE block .)
    TRUE            reduce using rule 22 (statement -> IF expression block ELSE block .)
    FALSE           reduce using rule 22 (statement -> IF expression block ELSE block .)
    DIFFER          reduce using rule 22 (statement -> IF expression block ELSE block .)
    NUMBER          reduce using rule 22 (statement -> IF expression block ELSE block .)
    FLOAT           reduce using rule 22 (statement -> IF expression block ELSE block .)
    STRING          reduce using rule 22 (statement -> IF expression block ELSE block .)
    RCURLY          reduce using rule 22 (statement -> IF expression block ELSE block .)


state 105

    (24) statement -> NAME COLON types EQUALS expression . SEMICOLON
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    SEMICOLON       shift and go to state 111
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 106

    (25) statement -> NAME COLON types EQUALS QMARK . STRING QMARK SEMICOLON

    STRING          shift and go to state 112


state 107

    (27) statement -> NAME EQUALS QMARK STRING QMARK . SEMICOLON

    SEMICOLON       shift and go to state 113


state 108

    (50) expression -> NAME LPAR RPAR LBRACK expression . RBRACK
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    RBRACK          shift and go to state 114
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 109

    (54) argument -> expression COMMA expression .
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    RPAR            reduce using rule 54 (argument -> expression COMMA expression .)
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 110

    (51) expression -> NAME LPAR argument RPAR LBRACK . expression RBRACK
    (29) expression -> . expression SUM expression
    (30) expression -> . expression SUB expression
    (31) expression -> . expression MULTIPLY expression
    (32) expression -> . expression DIVIDE expression
    (33) expression -> . expression RESTOF expression
    (34) expression -> . expression SAMEAS expression
    (35) expression -> . expression NEQUAL expression
    (36) expression -> . expression HEQUAL expression
    (37) expression -> . expression LEQUAL expression
    (38) expression -> . expression HIGHER expression
    (39) expression -> . expression LOWER expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . TRUE
    (43) expression -> . FALSE
    (44) expression -> . DIFFER expression
    (45) expression -> . NUMBER
    (46) expression -> . FLOAT
    (47) expression -> . STRING
    (48) expression -> . NAME
    (49) expression -> . NAME LBRACK expression RBRACK
    (50) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (51) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (52) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 43
    FALSE           shift and go to state 44
    DIFFER          shift and go to state 45
    NUMBER          shift and go to state 46
    FLOAT           shift and go to state 47
    STRING          shift and go to state 42
    NAME            shift and go to state 52

    expression                     shift and go to state 115

state 111

    (24) statement -> NAME COLON types EQUALS expression SEMICOLON .

    RETURN          reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    IF              reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    NAME            reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    DIFFER          reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    STRING          reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    RCURLY          reduce using rule 24 (statement -> NAME COLON types EQUALS expression SEMICOLON .)


state 112

    (25) statement -> NAME COLON types EQUALS QMARK STRING . QMARK SEMICOLON

    QMARK           shift and go to state 116


state 113

    (27) statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .

    RETURN          reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    IF              reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    NAME            reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    TRUE            reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    FALSE           reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    DIFFER          reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    NUMBER          reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    FLOAT           reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    STRING          reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    RCURLY          reduce using rule 27 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)


state 114

    (50) expression -> NAME LPAR RPAR LBRACK expression RBRACK .

    SUM             reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    SUB             reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    MULTIPLY        reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RESTOF          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    SAMEAS          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    NEQUAL          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    HEQUAL          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    LEQUAL          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    HIGHER          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    LOWER           reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    AND             reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    OR              reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RETURN          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    IF              reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    WHILE           reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    NAME            reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    TRUE            reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    FALSE           reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    DIFFER          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    NUMBER          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    FLOAT           reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    STRING          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RCURLY          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    LCURLY          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RBRACK          reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    COMMA           reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RPAR            reduce using rule 50 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)


state 115

    (51) expression -> NAME LPAR argument RPAR LBRACK expression . RBRACK
    (29) expression -> expression . SUM expression
    (30) expression -> expression . SUB expression
    (31) expression -> expression . MULTIPLY expression
    (32) expression -> expression . DIVIDE expression
    (33) expression -> expression . RESTOF expression
    (34) expression -> expression . SAMEAS expression
    (35) expression -> expression . NEQUAL expression
    (36) expression -> expression . HEQUAL expression
    (37) expression -> expression . LEQUAL expression
    (38) expression -> expression . HIGHER expression
    (39) expression -> expression . LOWER expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression

    RBRACK          shift and go to state 117
    SUM             shift and go to state 53
    SUB             shift and go to state 54
    MULTIPLY        shift and go to state 55
    DIVIDE          shift and go to state 56
    RESTOF          shift and go to state 57
    SAMEAS          shift and go to state 58
    NEQUAL          shift and go to state 59
    HEQUAL          shift and go to state 60
    LEQUAL          shift and go to state 61
    HIGHER          shift and go to state 62
    LOWER           shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65


state 116

    (25) statement -> NAME COLON types EQUALS QMARK STRING QMARK . SEMICOLON

    SEMICOLON       shift and go to state 118


state 117

    (51) expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .

    SUM             reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    SUB             reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    MULTIPLY        reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RESTOF          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    SAMEAS          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    NEQUAL          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    HEQUAL          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    LEQUAL          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    HIGHER          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    LOWER           reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    AND             reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    OR              reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RETURN          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    IF              reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    WHILE           reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    NAME            reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    TRUE            reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    FALSE           reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    DIFFER          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    NUMBER          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    FLOAT           reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    STRING          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RCURLY          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    LCURLY          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RBRACK          reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    COMMA           reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RPAR            reduce using rule 51 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)


state 118

    (25) statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .

    RETURN          reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    IF              reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    NAME            reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    TRUE            reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    FALSE           reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    DIFFER          reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    NUMBER          reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    FLOAT           reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    STRING          reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    RCURLY          reduce using rule 25 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)

