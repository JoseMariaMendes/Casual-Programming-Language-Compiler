Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> DECLARATION declaration
Rule 2     program -> DEFINITION definition
Rule 3     program -> DECLARATION declaration program
Rule 4     program -> DEFINITION definition program
Rule 5     types -> INT
Rule 6     types -> FLOATTYPE
Rule 7     types -> BOOL
Rule 8     types -> STRINGTYPE
Rule 9     declaration -> NAME LPAR dargument RPAR COLON types
Rule 10    declaration -> NAME LPAR dargument RPAR COLON VOID
Rule 11    declaration -> NAME LPAR RPAR COLON types
Rule 12    declaration -> NAME LPAR RPAR COLON VOID
Rule 13    definition -> NAME LPAR dargument RPAR COLON types block
Rule 14    definition -> NAME LPAR RPAR COLON types block
Rule 15    definition -> NAME LPAR RPAR COLON VOID block
Rule 16    definition -> NAME LPAR dargument RPAR COLON VOID block
Rule 17    dargument -> NAME COLON types
Rule 18    dargument -> NAME COLON types COMMA dargument
Rule 19    block -> LCURLY RCURLY
Rule 20    block -> LCURLY block_content RCURLY
Rule 21    block_content -> statement
Rule 22    block_content -> statement block_content
Rule 23    statement -> RETURN SEMICOLON
Rule 24    statement -> RETURN expression SEMICOLON
Rule 25    statement -> IF expression block
Rule 26    statement -> IF expression block ELSE block
Rule 27    statement -> WHILE expression block
Rule 28    statement -> NAME COLON types EQUALS expression SEMICOLON
Rule 29    statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON
Rule 30    statement -> NAME EQUALS expression SEMICOLON
Rule 31    statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON
Rule 32    statement -> expression
Rule 33    expression -> expression SUM expression
Rule 34    expression -> expression SUB expression
Rule 35    expression -> expression MULTIPLY expression
Rule 36    expression -> expression DIVIDE expression
Rule 37    expression -> expression RESTOF expression
Rule 38    expression -> expression SAMEAS expression
Rule 39    expression -> expression NEQUAL expression
Rule 40    expression -> expression HEQUAL expression
Rule 41    expression -> expression LEQUAL expression
Rule 42    expression -> expression HIGHER expression
Rule 43    expression -> expression LOWER expression
Rule 44    expression -> expression AND expression
Rule 45    expression -> expression OR expression
Rule 46    expression -> TRUE
Rule 47    expression -> FALSE
Rule 48    expression -> DIFFER expression
Rule 49    expression -> NUMBER
Rule 50    expression -> FLOAT
Rule 51    expression -> STRING
Rule 52    expression -> NAME
Rule 53    expression -> NAME LBRACK expression RBRACK
Rule 54    expression -> NAME LPAR RPAR LBRACK expression RBRACK
Rule 55    expression -> NAME LPAR argument RPAR LBRACK expression RBRACK
Rule 56    expression -> NAME LPAR argument RPAR
Rule 57    argument -> expression
Rule 58    argument -> expression COMMA expression

Terminals, with rules where they appear

AND                  : 44
BOOL                 : 7
COLON                : 9 10 11 12 13 14 15 16 17 18 28 29
COMMA                : 18 58
DECLARATION          : 1 3
DEFINITION           : 2 4
DIFFER               : 48
DIVIDE               : 36
ELSE                 : 26
EQUALS               : 28 29 30 31
FALSE                : 47
FLOAT                : 50
FLOATTYPE            : 6
HEQUAL               : 40
HIGHER               : 42
IF                   : 25 26
INT                  : 5
LBRACK               : 53 54 55
LCURLY               : 19 20
LEQUAL               : 41
LOWER                : 43
LPAR                 : 9 10 11 12 13 14 15 16 54 55 56
MULTIPLY             : 35
NAME                 : 9 10 11 12 13 14 15 16 17 18 28 29 30 31 52 53 54 55 56
NEQUAL               : 39
NUMBER               : 49
OR                   : 45
QMARK                : 29 29 31 31
RBRACK               : 53 54 55
RCURLY               : 19 20
RESTOF               : 37
RETURN               : 23 24
RPAR                 : 9 10 11 12 13 14 15 16 54 55 56
SAMEAS               : 38
SEMICOLON            : 23 24 28 29 30 31
STRING               : 29 31 51
STRINGTYPE           : 8
SUB                  : 34
SUM                  : 33
TRUE                 : 46
VOID                 : 10 12 15 16
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

argument             : 55 56
block                : 13 14 15 16 25 26 26 27
block_content        : 20 22
dargument            : 9 10 13 16 18
declaration          : 1 3
definition           : 2 4
expression           : 24 25 26 27 28 30 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 48 53 54 55 57 58 58
program              : 3 4 0
statement            : 21 22
types                : 9 11 13 14 17 18 28 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . DECLARATION declaration
    (2) program -> . DEFINITION definition
    (3) program -> . DECLARATION declaration program
    (4) program -> . DEFINITION definition program

    DECLARATION     shift and go to state 2
    DEFINITION      shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> DECLARATION . declaration
    (3) program -> DECLARATION . declaration program
    (9) declaration -> . NAME LPAR dargument RPAR COLON types
    (10) declaration -> . NAME LPAR dargument RPAR COLON VOID
    (11) declaration -> . NAME LPAR RPAR COLON types
    (12) declaration -> . NAME LPAR RPAR COLON VOID

    NAME            shift and go to state 5

    declaration                    shift and go to state 4

state 3

    (2) program -> DEFINITION . definition
    (4) program -> DEFINITION . definition program
    (13) definition -> . NAME LPAR dargument RPAR COLON types block
    (14) definition -> . NAME LPAR RPAR COLON types block
    (15) definition -> . NAME LPAR RPAR COLON VOID block
    (16) definition -> . NAME LPAR dargument RPAR COLON VOID block

    NAME            shift and go to state 7

    definition                     shift and go to state 6

state 4

    (1) program -> DECLARATION declaration .
    (3) program -> DECLARATION declaration . program
    (1) program -> . DECLARATION declaration
    (2) program -> . DEFINITION definition
    (3) program -> . DECLARATION declaration program
    (4) program -> . DEFINITION definition program

    $end            reduce using rule 1 (program -> DECLARATION declaration .)
    DECLARATION     shift and go to state 2
    DEFINITION      shift and go to state 3

    program                        shift and go to state 8

state 5

    (9) declaration -> NAME . LPAR dargument RPAR COLON types
    (10) declaration -> NAME . LPAR dargument RPAR COLON VOID
    (11) declaration -> NAME . LPAR RPAR COLON types
    (12) declaration -> NAME . LPAR RPAR COLON VOID

    LPAR            shift and go to state 9


state 6

    (2) program -> DEFINITION definition .
    (4) program -> DEFINITION definition . program
    (1) program -> . DECLARATION declaration
    (2) program -> . DEFINITION definition
    (3) program -> . DECLARATION declaration program
    (4) program -> . DEFINITION definition program

    $end            reduce using rule 2 (program -> DEFINITION definition .)
    DECLARATION     shift and go to state 2
    DEFINITION      shift and go to state 3

    program                        shift and go to state 10

state 7

    (13) definition -> NAME . LPAR dargument RPAR COLON types block
    (14) definition -> NAME . LPAR RPAR COLON types block
    (15) definition -> NAME . LPAR RPAR COLON VOID block
    (16) definition -> NAME . LPAR dargument RPAR COLON VOID block

    LPAR            shift and go to state 11


state 8

    (3) program -> DECLARATION declaration program .

    $end            reduce using rule 3 (program -> DECLARATION declaration program .)


state 9

    (9) declaration -> NAME LPAR . dargument RPAR COLON types
    (10) declaration -> NAME LPAR . dargument RPAR COLON VOID
    (11) declaration -> NAME LPAR . RPAR COLON types
    (12) declaration -> NAME LPAR . RPAR COLON VOID
    (17) dargument -> . NAME COLON types
    (18) dargument -> . NAME COLON types COMMA dargument

    RPAR            shift and go to state 14
    NAME            shift and go to state 12

    dargument                      shift and go to state 13

state 10

    (4) program -> DEFINITION definition program .

    $end            reduce using rule 4 (program -> DEFINITION definition program .)


state 11

    (13) definition -> NAME LPAR . dargument RPAR COLON types block
    (14) definition -> NAME LPAR . RPAR COLON types block
    (15) definition -> NAME LPAR . RPAR COLON VOID block
    (16) definition -> NAME LPAR . dargument RPAR COLON VOID block
    (17) dargument -> . NAME COLON types
    (18) dargument -> . NAME COLON types COMMA dargument

    RPAR            shift and go to state 16
    NAME            shift and go to state 12

    dargument                      shift and go to state 15

state 12

    (17) dargument -> NAME . COLON types
    (18) dargument -> NAME . COLON types COMMA dargument

    COLON           shift and go to state 17


state 13

    (9) declaration -> NAME LPAR dargument . RPAR COLON types
    (10) declaration -> NAME LPAR dargument . RPAR COLON VOID

    RPAR            shift and go to state 18


state 14

    (11) declaration -> NAME LPAR RPAR . COLON types
    (12) declaration -> NAME LPAR RPAR . COLON VOID

    COLON           shift and go to state 19


state 15

    (13) definition -> NAME LPAR dargument . RPAR COLON types block
    (16) definition -> NAME LPAR dargument . RPAR COLON VOID block

    RPAR            shift and go to state 20


state 16

    (14) definition -> NAME LPAR RPAR . COLON types block
    (15) definition -> NAME LPAR RPAR . COLON VOID block

    COLON           shift and go to state 21


state 17

    (17) dargument -> NAME COLON . types
    (18) dargument -> NAME COLON . types COMMA dargument
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    INT             shift and go to state 23
    FLOATTYPE       shift and go to state 24
    BOOL            shift and go to state 25
    STRINGTYPE      shift and go to state 26

    types                          shift and go to state 22

state 18

    (9) declaration -> NAME LPAR dargument RPAR . COLON types
    (10) declaration -> NAME LPAR dargument RPAR . COLON VOID

    COLON           shift and go to state 27


state 19

    (11) declaration -> NAME LPAR RPAR COLON . types
    (12) declaration -> NAME LPAR RPAR COLON . VOID
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    VOID            shift and go to state 29
    INT             shift and go to state 23
    FLOATTYPE       shift and go to state 24
    BOOL            shift and go to state 25
    STRINGTYPE      shift and go to state 26

    types                          shift and go to state 28

state 20

    (13) definition -> NAME LPAR dargument RPAR . COLON types block
    (16) definition -> NAME LPAR dargument RPAR . COLON VOID block

    COLON           shift and go to state 30


state 21

    (14) definition -> NAME LPAR RPAR COLON . types block
    (15) definition -> NAME LPAR RPAR COLON . VOID block
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    VOID            shift and go to state 32
    INT             shift and go to state 23
    FLOATTYPE       shift and go to state 24
    BOOL            shift and go to state 25
    STRINGTYPE      shift and go to state 26

    types                          shift and go to state 31

state 22

    (17) dargument -> NAME COLON types .
    (18) dargument -> NAME COLON types . COMMA dargument

    RPAR            reduce using rule 17 (dargument -> NAME COLON types .)
    COMMA           shift and go to state 33


state 23

    (5) types -> INT .

    COMMA           reduce using rule 5 (types -> INT .)
    RPAR            reduce using rule 5 (types -> INT .)
    DECLARATION     reduce using rule 5 (types -> INT .)
    DEFINITION      reduce using rule 5 (types -> INT .)
    $end            reduce using rule 5 (types -> INT .)
    LCURLY          reduce using rule 5 (types -> INT .)
    EQUALS          reduce using rule 5 (types -> INT .)


state 24

    (6) types -> FLOATTYPE .

    COMMA           reduce using rule 6 (types -> FLOATTYPE .)
    RPAR            reduce using rule 6 (types -> FLOATTYPE .)
    DECLARATION     reduce using rule 6 (types -> FLOATTYPE .)
    DEFINITION      reduce using rule 6 (types -> FLOATTYPE .)
    $end            reduce using rule 6 (types -> FLOATTYPE .)
    LCURLY          reduce using rule 6 (types -> FLOATTYPE .)
    EQUALS          reduce using rule 6 (types -> FLOATTYPE .)


state 25

    (7) types -> BOOL .

    COMMA           reduce using rule 7 (types -> BOOL .)
    RPAR            reduce using rule 7 (types -> BOOL .)
    DECLARATION     reduce using rule 7 (types -> BOOL .)
    DEFINITION      reduce using rule 7 (types -> BOOL .)
    $end            reduce using rule 7 (types -> BOOL .)
    LCURLY          reduce using rule 7 (types -> BOOL .)
    EQUALS          reduce using rule 7 (types -> BOOL .)


state 26

    (8) types -> STRINGTYPE .

    COMMA           reduce using rule 8 (types -> STRINGTYPE .)
    RPAR            reduce using rule 8 (types -> STRINGTYPE .)
    DECLARATION     reduce using rule 8 (types -> STRINGTYPE .)
    DEFINITION      reduce using rule 8 (types -> STRINGTYPE .)
    $end            reduce using rule 8 (types -> STRINGTYPE .)
    LCURLY          reduce using rule 8 (types -> STRINGTYPE .)
    EQUALS          reduce using rule 8 (types -> STRINGTYPE .)


state 27

    (9) declaration -> NAME LPAR dargument RPAR COLON . types
    (10) declaration -> NAME LPAR dargument RPAR COLON . VOID
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    VOID            shift and go to state 35
    INT             shift and go to state 23
    FLOATTYPE       shift and go to state 24
    BOOL            shift and go to state 25
    STRINGTYPE      shift and go to state 26

    types                          shift and go to state 34

state 28

    (11) declaration -> NAME LPAR RPAR COLON types .

    DECLARATION     reduce using rule 11 (declaration -> NAME LPAR RPAR COLON types .)
    DEFINITION      reduce using rule 11 (declaration -> NAME LPAR RPAR COLON types .)
    $end            reduce using rule 11 (declaration -> NAME LPAR RPAR COLON types .)


state 29

    (12) declaration -> NAME LPAR RPAR COLON VOID .

    DECLARATION     reduce using rule 12 (declaration -> NAME LPAR RPAR COLON VOID .)
    DEFINITION      reduce using rule 12 (declaration -> NAME LPAR RPAR COLON VOID .)
    $end            reduce using rule 12 (declaration -> NAME LPAR RPAR COLON VOID .)


state 30

    (13) definition -> NAME LPAR dargument RPAR COLON . types block
    (16) definition -> NAME LPAR dargument RPAR COLON . VOID block
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    VOID            shift and go to state 37
    INT             shift and go to state 23
    FLOATTYPE       shift and go to state 24
    BOOL            shift and go to state 25
    STRINGTYPE      shift and go to state 26

    types                          shift and go to state 36

state 31

    (14) definition -> NAME LPAR RPAR COLON types . block
    (19) block -> . LCURLY RCURLY
    (20) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 39

    block                          shift and go to state 38

state 32

    (15) definition -> NAME LPAR RPAR COLON VOID . block
    (19) block -> . LCURLY RCURLY
    (20) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 39

    block                          shift and go to state 40

state 33

    (18) dargument -> NAME COLON types COMMA . dargument
    (17) dargument -> . NAME COLON types
    (18) dargument -> . NAME COLON types COMMA dargument

    NAME            shift and go to state 12

    dargument                      shift and go to state 41

state 34

    (9) declaration -> NAME LPAR dargument RPAR COLON types .

    DECLARATION     reduce using rule 9 (declaration -> NAME LPAR dargument RPAR COLON types .)
    DEFINITION      reduce using rule 9 (declaration -> NAME LPAR dargument RPAR COLON types .)
    $end            reduce using rule 9 (declaration -> NAME LPAR dargument RPAR COLON types .)


state 35

    (10) declaration -> NAME LPAR dargument RPAR COLON VOID .

    DECLARATION     reduce using rule 10 (declaration -> NAME LPAR dargument RPAR COLON VOID .)
    DEFINITION      reduce using rule 10 (declaration -> NAME LPAR dargument RPAR COLON VOID .)
    $end            reduce using rule 10 (declaration -> NAME LPAR dargument RPAR COLON VOID .)


state 36

    (13) definition -> NAME LPAR dargument RPAR COLON types . block
    (19) block -> . LCURLY RCURLY
    (20) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 39

    block                          shift and go to state 42

state 37

    (16) definition -> NAME LPAR dargument RPAR COLON VOID . block
    (19) block -> . LCURLY RCURLY
    (20) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 39

    block                          shift and go to state 43

state 38

    (14) definition -> NAME LPAR RPAR COLON types block .

    DECLARATION     reduce using rule 14 (definition -> NAME LPAR RPAR COLON types block .)
    DEFINITION      reduce using rule 14 (definition -> NAME LPAR RPAR COLON types block .)
    $end            reduce using rule 14 (definition -> NAME LPAR RPAR COLON types block .)


state 39

    (19) block -> LCURLY . RCURLY
    (20) block -> LCURLY . block_content RCURLY
    (21) block_content -> . statement
    (22) block_content -> . statement block_content
    (23) statement -> . RETURN SEMICOLON
    (24) statement -> . RETURN expression SEMICOLON
    (25) statement -> . IF expression block
    (26) statement -> . IF expression block ELSE block
    (27) statement -> . WHILE expression block
    (28) statement -> . NAME COLON types EQUALS expression SEMICOLON
    (29) statement -> . NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON
    (30) statement -> . NAME EQUALS expression SEMICOLON
    (31) statement -> . NAME EQUALS QMARK STRING QMARK SEMICOLON
    (32) statement -> . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    RCURLY          shift and go to state 44
    RETURN          shift and go to state 47
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    NAME            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52

    block_content                  shift and go to state 45
    statement                      shift and go to state 46
    expression                     shift and go to state 48

state 40

    (15) definition -> NAME LPAR RPAR COLON VOID block .

    DECLARATION     reduce using rule 15 (definition -> NAME LPAR RPAR COLON VOID block .)
    DEFINITION      reduce using rule 15 (definition -> NAME LPAR RPAR COLON VOID block .)
    $end            reduce using rule 15 (definition -> NAME LPAR RPAR COLON VOID block .)


state 41

    (18) dargument -> NAME COLON types COMMA dargument .

    RPAR            reduce using rule 18 (dargument -> NAME COLON types COMMA dargument .)


state 42

    (13) definition -> NAME LPAR dargument RPAR COLON types block .

    DECLARATION     reduce using rule 13 (definition -> NAME LPAR dargument RPAR COLON types block .)
    DEFINITION      reduce using rule 13 (definition -> NAME LPAR dargument RPAR COLON types block .)
    $end            reduce using rule 13 (definition -> NAME LPAR dargument RPAR COLON types block .)


state 43

    (16) definition -> NAME LPAR dargument RPAR COLON VOID block .

    DECLARATION     reduce using rule 16 (definition -> NAME LPAR dargument RPAR COLON VOID block .)
    DEFINITION      reduce using rule 16 (definition -> NAME LPAR dargument RPAR COLON VOID block .)
    $end            reduce using rule 16 (definition -> NAME LPAR dargument RPAR COLON VOID block .)


state 44

    (19) block -> LCURLY RCURLY .

    DECLARATION     reduce using rule 19 (block -> LCURLY RCURLY .)
    DEFINITION      reduce using rule 19 (block -> LCURLY RCURLY .)
    $end            reduce using rule 19 (block -> LCURLY RCURLY .)
    ELSE            reduce using rule 19 (block -> LCURLY RCURLY .)
    RETURN          reduce using rule 19 (block -> LCURLY RCURLY .)
    IF              reduce using rule 19 (block -> LCURLY RCURLY .)
    WHILE           reduce using rule 19 (block -> LCURLY RCURLY .)
    NAME            reduce using rule 19 (block -> LCURLY RCURLY .)
    TRUE            reduce using rule 19 (block -> LCURLY RCURLY .)
    FALSE           reduce using rule 19 (block -> LCURLY RCURLY .)
    DIFFER          reduce using rule 19 (block -> LCURLY RCURLY .)
    NUMBER          reduce using rule 19 (block -> LCURLY RCURLY .)
    FLOAT           reduce using rule 19 (block -> LCURLY RCURLY .)
    STRING          reduce using rule 19 (block -> LCURLY RCURLY .)
    RCURLY          reduce using rule 19 (block -> LCURLY RCURLY .)


state 45

    (20) block -> LCURLY block_content . RCURLY

    RCURLY          shift and go to state 58


state 46

    (21) block_content -> statement .
    (22) block_content -> statement . block_content
    (21) block_content -> . statement
    (22) block_content -> . statement block_content
    (23) statement -> . RETURN SEMICOLON
    (24) statement -> . RETURN expression SEMICOLON
    (25) statement -> . IF expression block
    (26) statement -> . IF expression block ELSE block
    (27) statement -> . WHILE expression block
    (28) statement -> . NAME COLON types EQUALS expression SEMICOLON
    (29) statement -> . NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON
    (30) statement -> . NAME EQUALS expression SEMICOLON
    (31) statement -> . NAME EQUALS QMARK STRING QMARK SEMICOLON
    (32) statement -> . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    RCURLY          reduce using rule 21 (block_content -> statement .)
    RETURN          shift and go to state 47
    IF              shift and go to state 49
    WHILE           shift and go to state 50
    NAME            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52

    statement                      shift and go to state 46
    block_content                  shift and go to state 59
    expression                     shift and go to state 48

state 47

    (23) statement -> RETURN . SEMICOLON
    (24) statement -> RETURN . expression SEMICOLON
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    SEMICOLON       shift and go to state 60
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 61

state 48

    (32) statement -> expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    RETURN          reduce using rule 32 (statement -> expression .)
    IF              reduce using rule 32 (statement -> expression .)
    WHILE           reduce using rule 32 (statement -> expression .)
    NAME            reduce using rule 32 (statement -> expression .)
    TRUE            reduce using rule 32 (statement -> expression .)
    FALSE           reduce using rule 32 (statement -> expression .)
    DIFFER          reduce using rule 32 (statement -> expression .)
    NUMBER          reduce using rule 32 (statement -> expression .)
    FLOAT           reduce using rule 32 (statement -> expression .)
    STRING          reduce using rule 32 (statement -> expression .)
    RCURLY          reduce using rule 32 (statement -> expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 49

    (25) statement -> IF . expression block
    (26) statement -> IF . expression block ELSE block
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 76

state 50

    (27) statement -> WHILE . expression block
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 77

state 51

    (28) statement -> NAME . COLON types EQUALS expression SEMICOLON
    (29) statement -> NAME . COLON types EQUALS QMARK STRING QMARK SEMICOLON
    (30) statement -> NAME . EQUALS expression SEMICOLON
    (31) statement -> NAME . EQUALS QMARK STRING QMARK SEMICOLON
    (52) expression -> NAME .
    (53) expression -> NAME . LBRACK expression RBRACK
    (54) expression -> NAME . LPAR RPAR LBRACK expression RBRACK
    (55) expression -> NAME . LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> NAME . LPAR argument RPAR

    COLON           shift and go to state 78
    EQUALS          shift and go to state 79
    SUM             reduce using rule 52 (expression -> NAME .)
    SUB             reduce using rule 52 (expression -> NAME .)
    MULTIPLY        reduce using rule 52 (expression -> NAME .)
    DIVIDE          reduce using rule 52 (expression -> NAME .)
    RESTOF          reduce using rule 52 (expression -> NAME .)
    SAMEAS          reduce using rule 52 (expression -> NAME .)
    NEQUAL          reduce using rule 52 (expression -> NAME .)
    HEQUAL          reduce using rule 52 (expression -> NAME .)
    LEQUAL          reduce using rule 52 (expression -> NAME .)
    HIGHER          reduce using rule 52 (expression -> NAME .)
    LOWER           reduce using rule 52 (expression -> NAME .)
    AND             reduce using rule 52 (expression -> NAME .)
    OR              reduce using rule 52 (expression -> NAME .)
    RETURN          reduce using rule 52 (expression -> NAME .)
    IF              reduce using rule 52 (expression -> NAME .)
    WHILE           reduce using rule 52 (expression -> NAME .)
    NAME            reduce using rule 52 (expression -> NAME .)
    TRUE            reduce using rule 52 (expression -> NAME .)
    FALSE           reduce using rule 52 (expression -> NAME .)
    DIFFER          reduce using rule 52 (expression -> NAME .)
    NUMBER          reduce using rule 52 (expression -> NAME .)
    FLOAT           reduce using rule 52 (expression -> NAME .)
    STRING          reduce using rule 52 (expression -> NAME .)
    RCURLY          reduce using rule 52 (expression -> NAME .)
    LBRACK          shift and go to state 80
    LPAR            shift and go to state 81


state 52

    (51) expression -> STRING .

    SUM             reduce using rule 51 (expression -> STRING .)
    SUB             reduce using rule 51 (expression -> STRING .)
    MULTIPLY        reduce using rule 51 (expression -> STRING .)
    DIVIDE          reduce using rule 51 (expression -> STRING .)
    RESTOF          reduce using rule 51 (expression -> STRING .)
    SAMEAS          reduce using rule 51 (expression -> STRING .)
    NEQUAL          reduce using rule 51 (expression -> STRING .)
    HEQUAL          reduce using rule 51 (expression -> STRING .)
    LEQUAL          reduce using rule 51 (expression -> STRING .)
    HIGHER          reduce using rule 51 (expression -> STRING .)
    LOWER           reduce using rule 51 (expression -> STRING .)
    AND             reduce using rule 51 (expression -> STRING .)
    OR              reduce using rule 51 (expression -> STRING .)
    RETURN          reduce using rule 51 (expression -> STRING .)
    IF              reduce using rule 51 (expression -> STRING .)
    WHILE           reduce using rule 51 (expression -> STRING .)
    NAME            reduce using rule 51 (expression -> STRING .)
    TRUE            reduce using rule 51 (expression -> STRING .)
    FALSE           reduce using rule 51 (expression -> STRING .)
    DIFFER          reduce using rule 51 (expression -> STRING .)
    NUMBER          reduce using rule 51 (expression -> STRING .)
    FLOAT           reduce using rule 51 (expression -> STRING .)
    STRING          reduce using rule 51 (expression -> STRING .)
    RCURLY          reduce using rule 51 (expression -> STRING .)
    SEMICOLON       reduce using rule 51 (expression -> STRING .)
    LCURLY          reduce using rule 51 (expression -> STRING .)
    RBRACK          reduce using rule 51 (expression -> STRING .)
    COMMA           reduce using rule 51 (expression -> STRING .)
    RPAR            reduce using rule 51 (expression -> STRING .)


state 53

    (46) expression -> TRUE .

    SUM             reduce using rule 46 (expression -> TRUE .)
    SUB             reduce using rule 46 (expression -> TRUE .)
    MULTIPLY        reduce using rule 46 (expression -> TRUE .)
    DIVIDE          reduce using rule 46 (expression -> TRUE .)
    RESTOF          reduce using rule 46 (expression -> TRUE .)
    SAMEAS          reduce using rule 46 (expression -> TRUE .)
    NEQUAL          reduce using rule 46 (expression -> TRUE .)
    HEQUAL          reduce using rule 46 (expression -> TRUE .)
    LEQUAL          reduce using rule 46 (expression -> TRUE .)
    HIGHER          reduce using rule 46 (expression -> TRUE .)
    LOWER           reduce using rule 46 (expression -> TRUE .)
    AND             reduce using rule 46 (expression -> TRUE .)
    OR              reduce using rule 46 (expression -> TRUE .)
    RETURN          reduce using rule 46 (expression -> TRUE .)
    IF              reduce using rule 46 (expression -> TRUE .)
    WHILE           reduce using rule 46 (expression -> TRUE .)
    NAME            reduce using rule 46 (expression -> TRUE .)
    TRUE            reduce using rule 46 (expression -> TRUE .)
    FALSE           reduce using rule 46 (expression -> TRUE .)
    DIFFER          reduce using rule 46 (expression -> TRUE .)
    NUMBER          reduce using rule 46 (expression -> TRUE .)
    FLOAT           reduce using rule 46 (expression -> TRUE .)
    STRING          reduce using rule 46 (expression -> TRUE .)
    RCURLY          reduce using rule 46 (expression -> TRUE .)
    SEMICOLON       reduce using rule 46 (expression -> TRUE .)
    LCURLY          reduce using rule 46 (expression -> TRUE .)
    RBRACK          reduce using rule 46 (expression -> TRUE .)
    COMMA           reduce using rule 46 (expression -> TRUE .)
    RPAR            reduce using rule 46 (expression -> TRUE .)


state 54

    (47) expression -> FALSE .

    SUM             reduce using rule 47 (expression -> FALSE .)
    SUB             reduce using rule 47 (expression -> FALSE .)
    MULTIPLY        reduce using rule 47 (expression -> FALSE .)
    DIVIDE          reduce using rule 47 (expression -> FALSE .)
    RESTOF          reduce using rule 47 (expression -> FALSE .)
    SAMEAS          reduce using rule 47 (expression -> FALSE .)
    NEQUAL          reduce using rule 47 (expression -> FALSE .)
    HEQUAL          reduce using rule 47 (expression -> FALSE .)
    LEQUAL          reduce using rule 47 (expression -> FALSE .)
    HIGHER          reduce using rule 47 (expression -> FALSE .)
    LOWER           reduce using rule 47 (expression -> FALSE .)
    AND             reduce using rule 47 (expression -> FALSE .)
    OR              reduce using rule 47 (expression -> FALSE .)
    RETURN          reduce using rule 47 (expression -> FALSE .)
    IF              reduce using rule 47 (expression -> FALSE .)
    WHILE           reduce using rule 47 (expression -> FALSE .)
    NAME            reduce using rule 47 (expression -> FALSE .)
    TRUE            reduce using rule 47 (expression -> FALSE .)
    FALSE           reduce using rule 47 (expression -> FALSE .)
    DIFFER          reduce using rule 47 (expression -> FALSE .)
    NUMBER          reduce using rule 47 (expression -> FALSE .)
    FLOAT           reduce using rule 47 (expression -> FALSE .)
    STRING          reduce using rule 47 (expression -> FALSE .)
    RCURLY          reduce using rule 47 (expression -> FALSE .)
    SEMICOLON       reduce using rule 47 (expression -> FALSE .)
    LCURLY          reduce using rule 47 (expression -> FALSE .)
    RBRACK          reduce using rule 47 (expression -> FALSE .)
    COMMA           reduce using rule 47 (expression -> FALSE .)
    RPAR            reduce using rule 47 (expression -> FALSE .)


state 55

    (48) expression -> DIFFER . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 82

state 56

    (49) expression -> NUMBER .

    SUM             reduce using rule 49 (expression -> NUMBER .)
    SUB             reduce using rule 49 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 49 (expression -> NUMBER .)
    DIVIDE          reduce using rule 49 (expression -> NUMBER .)
    RESTOF          reduce using rule 49 (expression -> NUMBER .)
    SAMEAS          reduce using rule 49 (expression -> NUMBER .)
    NEQUAL          reduce using rule 49 (expression -> NUMBER .)
    HEQUAL          reduce using rule 49 (expression -> NUMBER .)
    LEQUAL          reduce using rule 49 (expression -> NUMBER .)
    HIGHER          reduce using rule 49 (expression -> NUMBER .)
    LOWER           reduce using rule 49 (expression -> NUMBER .)
    AND             reduce using rule 49 (expression -> NUMBER .)
    OR              reduce using rule 49 (expression -> NUMBER .)
    RETURN          reduce using rule 49 (expression -> NUMBER .)
    IF              reduce using rule 49 (expression -> NUMBER .)
    WHILE           reduce using rule 49 (expression -> NUMBER .)
    NAME            reduce using rule 49 (expression -> NUMBER .)
    TRUE            reduce using rule 49 (expression -> NUMBER .)
    FALSE           reduce using rule 49 (expression -> NUMBER .)
    DIFFER          reduce using rule 49 (expression -> NUMBER .)
    NUMBER          reduce using rule 49 (expression -> NUMBER .)
    FLOAT           reduce using rule 49 (expression -> NUMBER .)
    STRING          reduce using rule 49 (expression -> NUMBER .)
    RCURLY          reduce using rule 49 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 49 (expression -> NUMBER .)
    LCURLY          reduce using rule 49 (expression -> NUMBER .)
    RBRACK          reduce using rule 49 (expression -> NUMBER .)
    COMMA           reduce using rule 49 (expression -> NUMBER .)
    RPAR            reduce using rule 49 (expression -> NUMBER .)


state 57

    (50) expression -> FLOAT .

    SUM             reduce using rule 50 (expression -> FLOAT .)
    SUB             reduce using rule 50 (expression -> FLOAT .)
    MULTIPLY        reduce using rule 50 (expression -> FLOAT .)
    DIVIDE          reduce using rule 50 (expression -> FLOAT .)
    RESTOF          reduce using rule 50 (expression -> FLOAT .)
    SAMEAS          reduce using rule 50 (expression -> FLOAT .)
    NEQUAL          reduce using rule 50 (expression -> FLOAT .)
    HEQUAL          reduce using rule 50 (expression -> FLOAT .)
    LEQUAL          reduce using rule 50 (expression -> FLOAT .)
    HIGHER          reduce using rule 50 (expression -> FLOAT .)
    LOWER           reduce using rule 50 (expression -> FLOAT .)
    AND             reduce using rule 50 (expression -> FLOAT .)
    OR              reduce using rule 50 (expression -> FLOAT .)
    RETURN          reduce using rule 50 (expression -> FLOAT .)
    IF              reduce using rule 50 (expression -> FLOAT .)
    WHILE           reduce using rule 50 (expression -> FLOAT .)
    NAME            reduce using rule 50 (expression -> FLOAT .)
    TRUE            reduce using rule 50 (expression -> FLOAT .)
    FALSE           reduce using rule 50 (expression -> FLOAT .)
    DIFFER          reduce using rule 50 (expression -> FLOAT .)
    NUMBER          reduce using rule 50 (expression -> FLOAT .)
    FLOAT           reduce using rule 50 (expression -> FLOAT .)
    STRING          reduce using rule 50 (expression -> FLOAT .)
    RCURLY          reduce using rule 50 (expression -> FLOAT .)
    SEMICOLON       reduce using rule 50 (expression -> FLOAT .)
    LCURLY          reduce using rule 50 (expression -> FLOAT .)
    RBRACK          reduce using rule 50 (expression -> FLOAT .)
    COMMA           reduce using rule 50 (expression -> FLOAT .)
    RPAR            reduce using rule 50 (expression -> FLOAT .)


state 58

    (20) block -> LCURLY block_content RCURLY .

    DECLARATION     reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    DEFINITION      reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    $end            reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    ELSE            reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    RETURN          reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    IF              reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    WHILE           reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    NAME            reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    TRUE            reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    FALSE           reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    DIFFER          reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    NUMBER          reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    FLOAT           reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    STRING          reduce using rule 20 (block -> LCURLY block_content RCURLY .)
    RCURLY          reduce using rule 20 (block -> LCURLY block_content RCURLY .)


state 59

    (22) block_content -> statement block_content .

    RCURLY          reduce using rule 22 (block_content -> statement block_content .)


state 60

    (23) statement -> RETURN SEMICOLON .

    RETURN          reduce using rule 23 (statement -> RETURN SEMICOLON .)
    IF              reduce using rule 23 (statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> RETURN SEMICOLON .)
    NAME            reduce using rule 23 (statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 23 (statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 23 (statement -> RETURN SEMICOLON .)
    DIFFER          reduce using rule 23 (statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 23 (statement -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 23 (statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 23 (statement -> RETURN SEMICOLON .)
    RCURLY          reduce using rule 23 (statement -> RETURN SEMICOLON .)


state 61

    (24) statement -> RETURN expression . SEMICOLON
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SEMICOLON       shift and go to state 83
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 62

    (52) expression -> NAME .
    (53) expression -> NAME . LBRACK expression RBRACK
    (54) expression -> NAME . LPAR RPAR LBRACK expression RBRACK
    (55) expression -> NAME . LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> NAME . LPAR argument RPAR

    SEMICOLON       reduce using rule 52 (expression -> NAME .)
    SUM             reduce using rule 52 (expression -> NAME .)
    SUB             reduce using rule 52 (expression -> NAME .)
    MULTIPLY        reduce using rule 52 (expression -> NAME .)
    DIVIDE          reduce using rule 52 (expression -> NAME .)
    RESTOF          reduce using rule 52 (expression -> NAME .)
    SAMEAS          reduce using rule 52 (expression -> NAME .)
    NEQUAL          reduce using rule 52 (expression -> NAME .)
    HEQUAL          reduce using rule 52 (expression -> NAME .)
    LEQUAL          reduce using rule 52 (expression -> NAME .)
    HIGHER          reduce using rule 52 (expression -> NAME .)
    LOWER           reduce using rule 52 (expression -> NAME .)
    AND             reduce using rule 52 (expression -> NAME .)
    OR              reduce using rule 52 (expression -> NAME .)
    LCURLY          reduce using rule 52 (expression -> NAME .)
    RETURN          reduce using rule 52 (expression -> NAME .)
    IF              reduce using rule 52 (expression -> NAME .)
    WHILE           reduce using rule 52 (expression -> NAME .)
    NAME            reduce using rule 52 (expression -> NAME .)
    TRUE            reduce using rule 52 (expression -> NAME .)
    FALSE           reduce using rule 52 (expression -> NAME .)
    DIFFER          reduce using rule 52 (expression -> NAME .)
    NUMBER          reduce using rule 52 (expression -> NAME .)
    FLOAT           reduce using rule 52 (expression -> NAME .)
    STRING          reduce using rule 52 (expression -> NAME .)
    RCURLY          reduce using rule 52 (expression -> NAME .)
    RBRACK          reduce using rule 52 (expression -> NAME .)
    COMMA           reduce using rule 52 (expression -> NAME .)
    RPAR            reduce using rule 52 (expression -> NAME .)
    LBRACK          shift and go to state 80
    LPAR            shift and go to state 81


state 63

    (33) expression -> expression SUM . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 84

state 64

    (34) expression -> expression SUB . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 85

state 65

    (35) expression -> expression MULTIPLY . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 86

state 66

    (36) expression -> expression DIVIDE . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 87

state 67

    (37) expression -> expression RESTOF . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 88

state 68

    (38) expression -> expression SAMEAS . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 89

state 69

    (39) expression -> expression NEQUAL . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 90

state 70

    (40) expression -> expression HEQUAL . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 91

state 71

    (41) expression -> expression LEQUAL . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 92

state 72

    (42) expression -> expression HIGHER . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 93

state 73

    (43) expression -> expression LOWER . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 94

state 74

    (44) expression -> expression AND . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 95

state 75

    (45) expression -> expression OR . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 96

state 76

    (25) statement -> IF expression . block
    (26) statement -> IF expression . block ELSE block
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (19) block -> . LCURLY RCURLY
    (20) block -> . LCURLY block_content RCURLY

    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    LCURLY          shift and go to state 39

    block                          shift and go to state 97

state 77

    (27) statement -> WHILE expression . block
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression
    (19) block -> . LCURLY RCURLY
    (20) block -> . LCURLY block_content RCURLY

    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75
    LCURLY          shift and go to state 39

    block                          shift and go to state 98

state 78

    (28) statement -> NAME COLON . types EQUALS expression SEMICOLON
    (29) statement -> NAME COLON . types EQUALS QMARK STRING QMARK SEMICOLON
    (5) types -> . INT
    (6) types -> . FLOATTYPE
    (7) types -> . BOOL
    (8) types -> . STRINGTYPE

    INT             shift and go to state 23
    FLOATTYPE       shift and go to state 24
    BOOL            shift and go to state 25
    STRINGTYPE      shift and go to state 26

    types                          shift and go to state 99

state 79

    (30) statement -> NAME EQUALS . expression SEMICOLON
    (31) statement -> NAME EQUALS . QMARK STRING QMARK SEMICOLON
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    QMARK           shift and go to state 101
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 100

state 80

    (53) expression -> NAME LBRACK . expression RBRACK
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 102

state 81

    (54) expression -> NAME LPAR . RPAR LBRACK expression RBRACK
    (55) expression -> NAME LPAR . argument RPAR LBRACK expression RBRACK
    (56) expression -> NAME LPAR . argument RPAR
    (57) argument -> . expression
    (58) argument -> . expression COMMA expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    RPAR            shift and go to state 103
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 104
    argument                       shift and go to state 105

state 82

    (48) expression -> DIFFER expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SAMEAS          reduce using rule 48 (expression -> DIFFER expression .)
    NEQUAL          reduce using rule 48 (expression -> DIFFER expression .)
    HEQUAL          reduce using rule 48 (expression -> DIFFER expression .)
    LEQUAL          reduce using rule 48 (expression -> DIFFER expression .)
    HIGHER          reduce using rule 48 (expression -> DIFFER expression .)
    LOWER           reduce using rule 48 (expression -> DIFFER expression .)
    AND             reduce using rule 48 (expression -> DIFFER expression .)
    OR              reduce using rule 48 (expression -> DIFFER expression .)
    RETURN          reduce using rule 48 (expression -> DIFFER expression .)
    IF              reduce using rule 48 (expression -> DIFFER expression .)
    WHILE           reduce using rule 48 (expression -> DIFFER expression .)
    NAME            reduce using rule 48 (expression -> DIFFER expression .)
    TRUE            reduce using rule 48 (expression -> DIFFER expression .)
    FALSE           reduce using rule 48 (expression -> DIFFER expression .)
    DIFFER          reduce using rule 48 (expression -> DIFFER expression .)
    NUMBER          reduce using rule 48 (expression -> DIFFER expression .)
    FLOAT           reduce using rule 48 (expression -> DIFFER expression .)
    STRING          reduce using rule 48 (expression -> DIFFER expression .)
    RCURLY          reduce using rule 48 (expression -> DIFFER expression .)
    SEMICOLON       reduce using rule 48 (expression -> DIFFER expression .)
    LCURLY          reduce using rule 48 (expression -> DIFFER expression .)
    RBRACK          reduce using rule 48 (expression -> DIFFER expression .)
    COMMA           reduce using rule 48 (expression -> DIFFER expression .)
    RPAR            reduce using rule 48 (expression -> DIFFER expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! SUM             [ reduce using rule 48 (expression -> DIFFER expression .) ]
  ! SUB             [ reduce using rule 48 (expression -> DIFFER expression .) ]
  ! MULTIPLY        [ reduce using rule 48 (expression -> DIFFER expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> DIFFER expression .) ]
  ! RESTOF          [ reduce using rule 48 (expression -> DIFFER expression .) ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 83

    (24) statement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    NAME            reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    DIFFER          reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 24 (statement -> RETURN expression SEMICOLON .)
    RCURLY          reduce using rule 24 (statement -> RETURN expression SEMICOLON .)


state 84

    (33) expression -> expression SUM expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SUM             reduce using rule 33 (expression -> expression SUM expression .)
    SUB             reduce using rule 33 (expression -> expression SUM expression .)
    SAMEAS          reduce using rule 33 (expression -> expression SUM expression .)
    NEQUAL          reduce using rule 33 (expression -> expression SUM expression .)
    HEQUAL          reduce using rule 33 (expression -> expression SUM expression .)
    LEQUAL          reduce using rule 33 (expression -> expression SUM expression .)
    HIGHER          reduce using rule 33 (expression -> expression SUM expression .)
    LOWER           reduce using rule 33 (expression -> expression SUM expression .)
    AND             reduce using rule 33 (expression -> expression SUM expression .)
    OR              reduce using rule 33 (expression -> expression SUM expression .)
    RETURN          reduce using rule 33 (expression -> expression SUM expression .)
    IF              reduce using rule 33 (expression -> expression SUM expression .)
    WHILE           reduce using rule 33 (expression -> expression SUM expression .)
    NAME            reduce using rule 33 (expression -> expression SUM expression .)
    TRUE            reduce using rule 33 (expression -> expression SUM expression .)
    FALSE           reduce using rule 33 (expression -> expression SUM expression .)
    DIFFER          reduce using rule 33 (expression -> expression SUM expression .)
    NUMBER          reduce using rule 33 (expression -> expression SUM expression .)
    FLOAT           reduce using rule 33 (expression -> expression SUM expression .)
    STRING          reduce using rule 33 (expression -> expression SUM expression .)
    RCURLY          reduce using rule 33 (expression -> expression SUM expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression SUM expression .)
    LCURLY          reduce using rule 33 (expression -> expression SUM expression .)
    RBRACK          reduce using rule 33 (expression -> expression SUM expression .)
    COMMA           reduce using rule 33 (expression -> expression SUM expression .)
    RPAR            reduce using rule 33 (expression -> expression SUM expression .)
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! MULTIPLY        [ reduce using rule 33 (expression -> expression SUM expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression SUM expression .) ]
  ! RESTOF          [ reduce using rule 33 (expression -> expression SUM expression .) ]
  ! SUM             [ shift and go to state 63 ]
  ! SUB             [ shift and go to state 64 ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 85

    (34) expression -> expression SUB expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SUM             reduce using rule 34 (expression -> expression SUB expression .)
    SUB             reduce using rule 34 (expression -> expression SUB expression .)
    SAMEAS          reduce using rule 34 (expression -> expression SUB expression .)
    NEQUAL          reduce using rule 34 (expression -> expression SUB expression .)
    HEQUAL          reduce using rule 34 (expression -> expression SUB expression .)
    LEQUAL          reduce using rule 34 (expression -> expression SUB expression .)
    HIGHER          reduce using rule 34 (expression -> expression SUB expression .)
    LOWER           reduce using rule 34 (expression -> expression SUB expression .)
    AND             reduce using rule 34 (expression -> expression SUB expression .)
    OR              reduce using rule 34 (expression -> expression SUB expression .)
    RETURN          reduce using rule 34 (expression -> expression SUB expression .)
    IF              reduce using rule 34 (expression -> expression SUB expression .)
    WHILE           reduce using rule 34 (expression -> expression SUB expression .)
    NAME            reduce using rule 34 (expression -> expression SUB expression .)
    TRUE            reduce using rule 34 (expression -> expression SUB expression .)
    FALSE           reduce using rule 34 (expression -> expression SUB expression .)
    DIFFER          reduce using rule 34 (expression -> expression SUB expression .)
    NUMBER          reduce using rule 34 (expression -> expression SUB expression .)
    FLOAT           reduce using rule 34 (expression -> expression SUB expression .)
    STRING          reduce using rule 34 (expression -> expression SUB expression .)
    RCURLY          reduce using rule 34 (expression -> expression SUB expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression SUB expression .)
    LCURLY          reduce using rule 34 (expression -> expression SUB expression .)
    RBRACK          reduce using rule 34 (expression -> expression SUB expression .)
    COMMA           reduce using rule 34 (expression -> expression SUB expression .)
    RPAR            reduce using rule 34 (expression -> expression SUB expression .)
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! MULTIPLY        [ reduce using rule 34 (expression -> expression SUB expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression SUB expression .) ]
  ! RESTOF          [ reduce using rule 34 (expression -> expression SUB expression .) ]
  ! SUM             [ shift and go to state 63 ]
  ! SUB             [ shift and go to state 64 ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 86

    (35) expression -> expression MULTIPLY expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SUM             reduce using rule 35 (expression -> expression MULTIPLY expression .)
    SUB             reduce using rule 35 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 35 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    RESTOF          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    SAMEAS          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    NEQUAL          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    HEQUAL          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    LEQUAL          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    HIGHER          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    LOWER           reduce using rule 35 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 35 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 35 (expression -> expression MULTIPLY expression .)
    RETURN          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 35 (expression -> expression MULTIPLY expression .)
    WHILE           reduce using rule 35 (expression -> expression MULTIPLY expression .)
    NAME            reduce using rule 35 (expression -> expression MULTIPLY expression .)
    TRUE            reduce using rule 35 (expression -> expression MULTIPLY expression .)
    FALSE           reduce using rule 35 (expression -> expression MULTIPLY expression .)
    DIFFER          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    NUMBER          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    FLOAT           reduce using rule 35 (expression -> expression MULTIPLY expression .)
    STRING          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    RCURLY          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression MULTIPLY expression .)
    LCURLY          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    RBRACK          reduce using rule 35 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 35 (expression -> expression MULTIPLY expression .)
    RPAR            reduce using rule 35 (expression -> expression MULTIPLY expression .)

  ! SUM             [ shift and go to state 63 ]
  ! SUB             [ shift and go to state 64 ]
  ! MULTIPLY        [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! RESTOF          [ shift and go to state 67 ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 87

    (36) expression -> expression DIVIDE expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SUM             reduce using rule 36 (expression -> expression DIVIDE expression .)
    SUB             reduce using rule 36 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 36 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 36 (expression -> expression DIVIDE expression .)
    RESTOF          reduce using rule 36 (expression -> expression DIVIDE expression .)
    SAMEAS          reduce using rule 36 (expression -> expression DIVIDE expression .)
    NEQUAL          reduce using rule 36 (expression -> expression DIVIDE expression .)
    HEQUAL          reduce using rule 36 (expression -> expression DIVIDE expression .)
    LEQUAL          reduce using rule 36 (expression -> expression DIVIDE expression .)
    HIGHER          reduce using rule 36 (expression -> expression DIVIDE expression .)
    LOWER           reduce using rule 36 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 36 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 36 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 36 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 36 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 36 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 36 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 36 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 36 (expression -> expression DIVIDE expression .)
    DIFFER          reduce using rule 36 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 36 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 36 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 36 (expression -> expression DIVIDE expression .)
    RCURLY          reduce using rule 36 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression DIVIDE expression .)
    LCURLY          reduce using rule 36 (expression -> expression DIVIDE expression .)
    RBRACK          reduce using rule 36 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 36 (expression -> expression DIVIDE expression .)
    RPAR            reduce using rule 36 (expression -> expression DIVIDE expression .)

  ! SUM             [ shift and go to state 63 ]
  ! SUB             [ shift and go to state 64 ]
  ! MULTIPLY        [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! RESTOF          [ shift and go to state 67 ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 88

    (37) expression -> expression RESTOF expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SUM             reduce using rule 37 (expression -> expression RESTOF expression .)
    SUB             reduce using rule 37 (expression -> expression RESTOF expression .)
    MULTIPLY        reduce using rule 37 (expression -> expression RESTOF expression .)
    DIVIDE          reduce using rule 37 (expression -> expression RESTOF expression .)
    RESTOF          reduce using rule 37 (expression -> expression RESTOF expression .)
    SAMEAS          reduce using rule 37 (expression -> expression RESTOF expression .)
    NEQUAL          reduce using rule 37 (expression -> expression RESTOF expression .)
    HEQUAL          reduce using rule 37 (expression -> expression RESTOF expression .)
    LEQUAL          reduce using rule 37 (expression -> expression RESTOF expression .)
    HIGHER          reduce using rule 37 (expression -> expression RESTOF expression .)
    LOWER           reduce using rule 37 (expression -> expression RESTOF expression .)
    AND             reduce using rule 37 (expression -> expression RESTOF expression .)
    OR              reduce using rule 37 (expression -> expression RESTOF expression .)
    RETURN          reduce using rule 37 (expression -> expression RESTOF expression .)
    IF              reduce using rule 37 (expression -> expression RESTOF expression .)
    WHILE           reduce using rule 37 (expression -> expression RESTOF expression .)
    NAME            reduce using rule 37 (expression -> expression RESTOF expression .)
    TRUE            reduce using rule 37 (expression -> expression RESTOF expression .)
    FALSE           reduce using rule 37 (expression -> expression RESTOF expression .)
    DIFFER          reduce using rule 37 (expression -> expression RESTOF expression .)
    NUMBER          reduce using rule 37 (expression -> expression RESTOF expression .)
    FLOAT           reduce using rule 37 (expression -> expression RESTOF expression .)
    STRING          reduce using rule 37 (expression -> expression RESTOF expression .)
    RCURLY          reduce using rule 37 (expression -> expression RESTOF expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression RESTOF expression .)
    LCURLY          reduce using rule 37 (expression -> expression RESTOF expression .)
    RBRACK          reduce using rule 37 (expression -> expression RESTOF expression .)
    COMMA           reduce using rule 37 (expression -> expression RESTOF expression .)
    RPAR            reduce using rule 37 (expression -> expression RESTOF expression .)

  ! SUM             [ shift and go to state 63 ]
  ! SUB             [ shift and go to state 64 ]
  ! MULTIPLY        [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! RESTOF          [ shift and go to state 67 ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 89

    (38) expression -> expression SAMEAS expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SAMEAS          reduce using rule 38 (expression -> expression SAMEAS expression .)
    NEQUAL          reduce using rule 38 (expression -> expression SAMEAS expression .)
    HEQUAL          reduce using rule 38 (expression -> expression SAMEAS expression .)
    LEQUAL          reduce using rule 38 (expression -> expression SAMEAS expression .)
    HIGHER          reduce using rule 38 (expression -> expression SAMEAS expression .)
    LOWER           reduce using rule 38 (expression -> expression SAMEAS expression .)
    AND             reduce using rule 38 (expression -> expression SAMEAS expression .)
    OR              reduce using rule 38 (expression -> expression SAMEAS expression .)
    RETURN          reduce using rule 38 (expression -> expression SAMEAS expression .)
    IF              reduce using rule 38 (expression -> expression SAMEAS expression .)
    WHILE           reduce using rule 38 (expression -> expression SAMEAS expression .)
    NAME            reduce using rule 38 (expression -> expression SAMEAS expression .)
    TRUE            reduce using rule 38 (expression -> expression SAMEAS expression .)
    FALSE           reduce using rule 38 (expression -> expression SAMEAS expression .)
    DIFFER          reduce using rule 38 (expression -> expression SAMEAS expression .)
    NUMBER          reduce using rule 38 (expression -> expression SAMEAS expression .)
    FLOAT           reduce using rule 38 (expression -> expression SAMEAS expression .)
    STRING          reduce using rule 38 (expression -> expression SAMEAS expression .)
    RCURLY          reduce using rule 38 (expression -> expression SAMEAS expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression SAMEAS expression .)
    LCURLY          reduce using rule 38 (expression -> expression SAMEAS expression .)
    RBRACK          reduce using rule 38 (expression -> expression SAMEAS expression .)
    COMMA           reduce using rule 38 (expression -> expression SAMEAS expression .)
    RPAR            reduce using rule 38 (expression -> expression SAMEAS expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! SUM             [ reduce using rule 38 (expression -> expression SAMEAS expression .) ]
  ! SUB             [ reduce using rule 38 (expression -> expression SAMEAS expression .) ]
  ! MULTIPLY        [ reduce using rule 38 (expression -> expression SAMEAS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression SAMEAS expression .) ]
  ! RESTOF          [ reduce using rule 38 (expression -> expression SAMEAS expression .) ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 90

    (39) expression -> expression NEQUAL expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SAMEAS          reduce using rule 39 (expression -> expression NEQUAL expression .)
    NEQUAL          reduce using rule 39 (expression -> expression NEQUAL expression .)
    HEQUAL          reduce using rule 39 (expression -> expression NEQUAL expression .)
    LEQUAL          reduce using rule 39 (expression -> expression NEQUAL expression .)
    HIGHER          reduce using rule 39 (expression -> expression NEQUAL expression .)
    LOWER           reduce using rule 39 (expression -> expression NEQUAL expression .)
    AND             reduce using rule 39 (expression -> expression NEQUAL expression .)
    OR              reduce using rule 39 (expression -> expression NEQUAL expression .)
    RETURN          reduce using rule 39 (expression -> expression NEQUAL expression .)
    IF              reduce using rule 39 (expression -> expression NEQUAL expression .)
    WHILE           reduce using rule 39 (expression -> expression NEQUAL expression .)
    NAME            reduce using rule 39 (expression -> expression NEQUAL expression .)
    TRUE            reduce using rule 39 (expression -> expression NEQUAL expression .)
    FALSE           reduce using rule 39 (expression -> expression NEQUAL expression .)
    DIFFER          reduce using rule 39 (expression -> expression NEQUAL expression .)
    NUMBER          reduce using rule 39 (expression -> expression NEQUAL expression .)
    FLOAT           reduce using rule 39 (expression -> expression NEQUAL expression .)
    STRING          reduce using rule 39 (expression -> expression NEQUAL expression .)
    RCURLY          reduce using rule 39 (expression -> expression NEQUAL expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression NEQUAL expression .)
    LCURLY          reduce using rule 39 (expression -> expression NEQUAL expression .)
    RBRACK          reduce using rule 39 (expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 39 (expression -> expression NEQUAL expression .)
    RPAR            reduce using rule 39 (expression -> expression NEQUAL expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! SUM             [ reduce using rule 39 (expression -> expression NEQUAL expression .) ]
  ! SUB             [ reduce using rule 39 (expression -> expression NEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 39 (expression -> expression NEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression NEQUAL expression .) ]
  ! RESTOF          [ reduce using rule 39 (expression -> expression NEQUAL expression .) ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 91

    (40) expression -> expression HEQUAL expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SAMEAS          reduce using rule 40 (expression -> expression HEQUAL expression .)
    NEQUAL          reduce using rule 40 (expression -> expression HEQUAL expression .)
    HEQUAL          reduce using rule 40 (expression -> expression HEQUAL expression .)
    LEQUAL          reduce using rule 40 (expression -> expression HEQUAL expression .)
    HIGHER          reduce using rule 40 (expression -> expression HEQUAL expression .)
    LOWER           reduce using rule 40 (expression -> expression HEQUAL expression .)
    AND             reduce using rule 40 (expression -> expression HEQUAL expression .)
    OR              reduce using rule 40 (expression -> expression HEQUAL expression .)
    RETURN          reduce using rule 40 (expression -> expression HEQUAL expression .)
    IF              reduce using rule 40 (expression -> expression HEQUAL expression .)
    WHILE           reduce using rule 40 (expression -> expression HEQUAL expression .)
    NAME            reduce using rule 40 (expression -> expression HEQUAL expression .)
    TRUE            reduce using rule 40 (expression -> expression HEQUAL expression .)
    FALSE           reduce using rule 40 (expression -> expression HEQUAL expression .)
    DIFFER          reduce using rule 40 (expression -> expression HEQUAL expression .)
    NUMBER          reduce using rule 40 (expression -> expression HEQUAL expression .)
    FLOAT           reduce using rule 40 (expression -> expression HEQUAL expression .)
    STRING          reduce using rule 40 (expression -> expression HEQUAL expression .)
    RCURLY          reduce using rule 40 (expression -> expression HEQUAL expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression HEQUAL expression .)
    LCURLY          reduce using rule 40 (expression -> expression HEQUAL expression .)
    RBRACK          reduce using rule 40 (expression -> expression HEQUAL expression .)
    COMMA           reduce using rule 40 (expression -> expression HEQUAL expression .)
    RPAR            reduce using rule 40 (expression -> expression HEQUAL expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! SUM             [ reduce using rule 40 (expression -> expression HEQUAL expression .) ]
  ! SUB             [ reduce using rule 40 (expression -> expression HEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 40 (expression -> expression HEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression HEQUAL expression .) ]
  ! RESTOF          [ reduce using rule 40 (expression -> expression HEQUAL expression .) ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 92

    (41) expression -> expression LEQUAL expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SAMEAS          reduce using rule 41 (expression -> expression LEQUAL expression .)
    NEQUAL          reduce using rule 41 (expression -> expression LEQUAL expression .)
    HEQUAL          reduce using rule 41 (expression -> expression LEQUAL expression .)
    LEQUAL          reduce using rule 41 (expression -> expression LEQUAL expression .)
    HIGHER          reduce using rule 41 (expression -> expression LEQUAL expression .)
    LOWER           reduce using rule 41 (expression -> expression LEQUAL expression .)
    AND             reduce using rule 41 (expression -> expression LEQUAL expression .)
    OR              reduce using rule 41 (expression -> expression LEQUAL expression .)
    RETURN          reduce using rule 41 (expression -> expression LEQUAL expression .)
    IF              reduce using rule 41 (expression -> expression LEQUAL expression .)
    WHILE           reduce using rule 41 (expression -> expression LEQUAL expression .)
    NAME            reduce using rule 41 (expression -> expression LEQUAL expression .)
    TRUE            reduce using rule 41 (expression -> expression LEQUAL expression .)
    FALSE           reduce using rule 41 (expression -> expression LEQUAL expression .)
    DIFFER          reduce using rule 41 (expression -> expression LEQUAL expression .)
    NUMBER          reduce using rule 41 (expression -> expression LEQUAL expression .)
    FLOAT           reduce using rule 41 (expression -> expression LEQUAL expression .)
    STRING          reduce using rule 41 (expression -> expression LEQUAL expression .)
    RCURLY          reduce using rule 41 (expression -> expression LEQUAL expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression LEQUAL expression .)
    LCURLY          reduce using rule 41 (expression -> expression LEQUAL expression .)
    RBRACK          reduce using rule 41 (expression -> expression LEQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression LEQUAL expression .)
    RPAR            reduce using rule 41 (expression -> expression LEQUAL expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! SUM             [ reduce using rule 41 (expression -> expression LEQUAL expression .) ]
  ! SUB             [ reduce using rule 41 (expression -> expression LEQUAL expression .) ]
  ! MULTIPLY        [ reduce using rule 41 (expression -> expression LEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression LEQUAL expression .) ]
  ! RESTOF          [ reduce using rule 41 (expression -> expression LEQUAL expression .) ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 93

    (42) expression -> expression HIGHER expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SAMEAS          reduce using rule 42 (expression -> expression HIGHER expression .)
    NEQUAL          reduce using rule 42 (expression -> expression HIGHER expression .)
    HEQUAL          reduce using rule 42 (expression -> expression HIGHER expression .)
    LEQUAL          reduce using rule 42 (expression -> expression HIGHER expression .)
    HIGHER          reduce using rule 42 (expression -> expression HIGHER expression .)
    LOWER           reduce using rule 42 (expression -> expression HIGHER expression .)
    AND             reduce using rule 42 (expression -> expression HIGHER expression .)
    OR              reduce using rule 42 (expression -> expression HIGHER expression .)
    RETURN          reduce using rule 42 (expression -> expression HIGHER expression .)
    IF              reduce using rule 42 (expression -> expression HIGHER expression .)
    WHILE           reduce using rule 42 (expression -> expression HIGHER expression .)
    NAME            reduce using rule 42 (expression -> expression HIGHER expression .)
    TRUE            reduce using rule 42 (expression -> expression HIGHER expression .)
    FALSE           reduce using rule 42 (expression -> expression HIGHER expression .)
    DIFFER          reduce using rule 42 (expression -> expression HIGHER expression .)
    NUMBER          reduce using rule 42 (expression -> expression HIGHER expression .)
    FLOAT           reduce using rule 42 (expression -> expression HIGHER expression .)
    STRING          reduce using rule 42 (expression -> expression HIGHER expression .)
    RCURLY          reduce using rule 42 (expression -> expression HIGHER expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression HIGHER expression .)
    LCURLY          reduce using rule 42 (expression -> expression HIGHER expression .)
    RBRACK          reduce using rule 42 (expression -> expression HIGHER expression .)
    COMMA           reduce using rule 42 (expression -> expression HIGHER expression .)
    RPAR            reduce using rule 42 (expression -> expression HIGHER expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! SUM             [ reduce using rule 42 (expression -> expression HIGHER expression .) ]
  ! SUB             [ reduce using rule 42 (expression -> expression HIGHER expression .) ]
  ! MULTIPLY        [ reduce using rule 42 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression HIGHER expression .) ]
  ! RESTOF          [ reduce using rule 42 (expression -> expression HIGHER expression .) ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 94

    (43) expression -> expression LOWER expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SAMEAS          reduce using rule 43 (expression -> expression LOWER expression .)
    NEQUAL          reduce using rule 43 (expression -> expression LOWER expression .)
    HEQUAL          reduce using rule 43 (expression -> expression LOWER expression .)
    LEQUAL          reduce using rule 43 (expression -> expression LOWER expression .)
    HIGHER          reduce using rule 43 (expression -> expression LOWER expression .)
    LOWER           reduce using rule 43 (expression -> expression LOWER expression .)
    AND             reduce using rule 43 (expression -> expression LOWER expression .)
    OR              reduce using rule 43 (expression -> expression LOWER expression .)
    RETURN          reduce using rule 43 (expression -> expression LOWER expression .)
    IF              reduce using rule 43 (expression -> expression LOWER expression .)
    WHILE           reduce using rule 43 (expression -> expression LOWER expression .)
    NAME            reduce using rule 43 (expression -> expression LOWER expression .)
    TRUE            reduce using rule 43 (expression -> expression LOWER expression .)
    FALSE           reduce using rule 43 (expression -> expression LOWER expression .)
    DIFFER          reduce using rule 43 (expression -> expression LOWER expression .)
    NUMBER          reduce using rule 43 (expression -> expression LOWER expression .)
    FLOAT           reduce using rule 43 (expression -> expression LOWER expression .)
    STRING          reduce using rule 43 (expression -> expression LOWER expression .)
    RCURLY          reduce using rule 43 (expression -> expression LOWER expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression LOWER expression .)
    LCURLY          reduce using rule 43 (expression -> expression LOWER expression .)
    RBRACK          reduce using rule 43 (expression -> expression LOWER expression .)
    COMMA           reduce using rule 43 (expression -> expression LOWER expression .)
    RPAR            reduce using rule 43 (expression -> expression LOWER expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67

  ! SUM             [ reduce using rule 43 (expression -> expression LOWER expression .) ]
  ! SUB             [ reduce using rule 43 (expression -> expression LOWER expression .) ]
  ! MULTIPLY        [ reduce using rule 43 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression LOWER expression .) ]
  ! RESTOF          [ reduce using rule 43 (expression -> expression LOWER expression .) ]
  ! SAMEAS          [ shift and go to state 68 ]
  ! NEQUAL          [ shift and go to state 69 ]
  ! HEQUAL          [ shift and go to state 70 ]
  ! LEQUAL          [ shift and go to state 71 ]
  ! HIGHER          [ shift and go to state 72 ]
  ! LOWER           [ shift and go to state 73 ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 95

    (44) expression -> expression AND expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    AND             reduce using rule 44 (expression -> expression AND expression .)
    OR              reduce using rule 44 (expression -> expression AND expression .)
    RETURN          reduce using rule 44 (expression -> expression AND expression .)
    IF              reduce using rule 44 (expression -> expression AND expression .)
    WHILE           reduce using rule 44 (expression -> expression AND expression .)
    NAME            reduce using rule 44 (expression -> expression AND expression .)
    TRUE            reduce using rule 44 (expression -> expression AND expression .)
    FALSE           reduce using rule 44 (expression -> expression AND expression .)
    DIFFER          reduce using rule 44 (expression -> expression AND expression .)
    NUMBER          reduce using rule 44 (expression -> expression AND expression .)
    FLOAT           reduce using rule 44 (expression -> expression AND expression .)
    STRING          reduce using rule 44 (expression -> expression AND expression .)
    RCURLY          reduce using rule 44 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression AND expression .)
    LCURLY          reduce using rule 44 (expression -> expression AND expression .)
    RBRACK          reduce using rule 44 (expression -> expression AND expression .)
    COMMA           reduce using rule 44 (expression -> expression AND expression .)
    RPAR            reduce using rule 44 (expression -> expression AND expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73

  ! SUM             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! SUB             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! RESTOF          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! SAMEAS          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! NEQUAL          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! HEQUAL          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! LEQUAL          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 96

    (45) expression -> expression OR expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    AND             reduce using rule 45 (expression -> expression OR expression .)
    OR              reduce using rule 45 (expression -> expression OR expression .)
    RETURN          reduce using rule 45 (expression -> expression OR expression .)
    IF              reduce using rule 45 (expression -> expression OR expression .)
    WHILE           reduce using rule 45 (expression -> expression OR expression .)
    NAME            reduce using rule 45 (expression -> expression OR expression .)
    TRUE            reduce using rule 45 (expression -> expression OR expression .)
    FALSE           reduce using rule 45 (expression -> expression OR expression .)
    DIFFER          reduce using rule 45 (expression -> expression OR expression .)
    NUMBER          reduce using rule 45 (expression -> expression OR expression .)
    FLOAT           reduce using rule 45 (expression -> expression OR expression .)
    STRING          reduce using rule 45 (expression -> expression OR expression .)
    RCURLY          reduce using rule 45 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression OR expression .)
    LCURLY          reduce using rule 45 (expression -> expression OR expression .)
    RBRACK          reduce using rule 45 (expression -> expression OR expression .)
    COMMA           reduce using rule 45 (expression -> expression OR expression .)
    RPAR            reduce using rule 45 (expression -> expression OR expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73

  ! SUM             [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! SUB             [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! RESTOF          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! SAMEAS          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! NEQUAL          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! HEQUAL          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! LEQUAL          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 45 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]


state 97

    (25) statement -> IF expression block .
    (26) statement -> IF expression block . ELSE block

    RETURN          reduce using rule 25 (statement -> IF expression block .)
    IF              reduce using rule 25 (statement -> IF expression block .)
    WHILE           reduce using rule 25 (statement -> IF expression block .)
    NAME            reduce using rule 25 (statement -> IF expression block .)
    TRUE            reduce using rule 25 (statement -> IF expression block .)
    FALSE           reduce using rule 25 (statement -> IF expression block .)
    DIFFER          reduce using rule 25 (statement -> IF expression block .)
    NUMBER          reduce using rule 25 (statement -> IF expression block .)
    FLOAT           reduce using rule 25 (statement -> IF expression block .)
    STRING          reduce using rule 25 (statement -> IF expression block .)
    RCURLY          reduce using rule 25 (statement -> IF expression block .)
    ELSE            shift and go to state 106


state 98

    (27) statement -> WHILE expression block .

    RETURN          reduce using rule 27 (statement -> WHILE expression block .)
    IF              reduce using rule 27 (statement -> WHILE expression block .)
    WHILE           reduce using rule 27 (statement -> WHILE expression block .)
    NAME            reduce using rule 27 (statement -> WHILE expression block .)
    TRUE            reduce using rule 27 (statement -> WHILE expression block .)
    FALSE           reduce using rule 27 (statement -> WHILE expression block .)
    DIFFER          reduce using rule 27 (statement -> WHILE expression block .)
    NUMBER          reduce using rule 27 (statement -> WHILE expression block .)
    FLOAT           reduce using rule 27 (statement -> WHILE expression block .)
    STRING          reduce using rule 27 (statement -> WHILE expression block .)
    RCURLY          reduce using rule 27 (statement -> WHILE expression block .)


state 99

    (28) statement -> NAME COLON types . EQUALS expression SEMICOLON
    (29) statement -> NAME COLON types . EQUALS QMARK STRING QMARK SEMICOLON

    EQUALS          shift and go to state 107


state 100

    (30) statement -> NAME EQUALS expression . SEMICOLON
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SEMICOLON       shift and go to state 108
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 101

    (31) statement -> NAME EQUALS QMARK . STRING QMARK SEMICOLON

    STRING          shift and go to state 109


state 102

    (53) expression -> NAME LBRACK expression . RBRACK
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    RBRACK          shift and go to state 110
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 103

    (54) expression -> NAME LPAR RPAR . LBRACK expression RBRACK

    LBRACK          shift and go to state 111


state 104

    (57) argument -> expression .
    (58) argument -> expression . COMMA expression
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    RPAR            reduce using rule 57 (argument -> expression .)
    COMMA           shift and go to state 112
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 105

    (55) expression -> NAME LPAR argument . RPAR LBRACK expression RBRACK
    (56) expression -> NAME LPAR argument . RPAR

    RPAR            shift and go to state 113


state 106

    (26) statement -> IF expression block ELSE . block
    (19) block -> . LCURLY RCURLY
    (20) block -> . LCURLY block_content RCURLY

    LCURLY          shift and go to state 39

    block                          shift and go to state 114

state 107

    (28) statement -> NAME COLON types EQUALS . expression SEMICOLON
    (29) statement -> NAME COLON types EQUALS . QMARK STRING QMARK SEMICOLON
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    QMARK           shift and go to state 116
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 115

state 108

    (30) statement -> NAME EQUALS expression SEMICOLON .

    RETURN          reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    IF              reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    NAME            reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    DIFFER          reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    STRING          reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)
    RCURLY          reduce using rule 30 (statement -> NAME EQUALS expression SEMICOLON .)


state 109

    (31) statement -> NAME EQUALS QMARK STRING . QMARK SEMICOLON

    QMARK           shift and go to state 117


state 110

    (53) expression -> NAME LBRACK expression RBRACK .

    SUM             reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    SUB             reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    MULTIPLY        reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    RESTOF          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    SAMEAS          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    NEQUAL          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    HEQUAL          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    LEQUAL          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    HIGHER          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    LOWER           reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    AND             reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    OR              reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    RETURN          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    IF              reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    WHILE           reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    NAME            reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    TRUE            reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    FALSE           reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    DIFFER          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    NUMBER          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    FLOAT           reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    STRING          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    RCURLY          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    LCURLY          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    RBRACK          reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    COMMA           reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)
    RPAR            reduce using rule 53 (expression -> NAME LBRACK expression RBRACK .)


state 111

    (54) expression -> NAME LPAR RPAR LBRACK . expression RBRACK
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 118

state 112

    (58) argument -> expression COMMA . expression
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 119

state 113

    (55) expression -> NAME LPAR argument RPAR . LBRACK expression RBRACK
    (56) expression -> NAME LPAR argument RPAR .

    LBRACK          shift and go to state 120
    SUM             reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    SUB             reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    MULTIPLY        reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    DIVIDE          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    RESTOF          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    SAMEAS          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    NEQUAL          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    HEQUAL          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    LEQUAL          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    HIGHER          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    LOWER           reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    AND             reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    OR              reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    RETURN          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    IF              reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    WHILE           reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    NAME            reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    TRUE            reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    FALSE           reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    DIFFER          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    NUMBER          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    FLOAT           reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    STRING          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    RCURLY          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    SEMICOLON       reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    LCURLY          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    RBRACK          reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    COMMA           reduce using rule 56 (expression -> NAME LPAR argument RPAR .)
    RPAR            reduce using rule 56 (expression -> NAME LPAR argument RPAR .)


state 114

    (26) statement -> IF expression block ELSE block .

    RETURN          reduce using rule 26 (statement -> IF expression block ELSE block .)
    IF              reduce using rule 26 (statement -> IF expression block ELSE block .)
    WHILE           reduce using rule 26 (statement -> IF expression block ELSE block .)
    NAME            reduce using rule 26 (statement -> IF expression block ELSE block .)
    TRUE            reduce using rule 26 (statement -> IF expression block ELSE block .)
    FALSE           reduce using rule 26 (statement -> IF expression block ELSE block .)
    DIFFER          reduce using rule 26 (statement -> IF expression block ELSE block .)
    NUMBER          reduce using rule 26 (statement -> IF expression block ELSE block .)
    FLOAT           reduce using rule 26 (statement -> IF expression block ELSE block .)
    STRING          reduce using rule 26 (statement -> IF expression block ELSE block .)
    RCURLY          reduce using rule 26 (statement -> IF expression block ELSE block .)


state 115

    (28) statement -> NAME COLON types EQUALS expression . SEMICOLON
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    SEMICOLON       shift and go to state 121
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 116

    (29) statement -> NAME COLON types EQUALS QMARK . STRING QMARK SEMICOLON

    STRING          shift and go to state 122


state 117

    (31) statement -> NAME EQUALS QMARK STRING QMARK . SEMICOLON

    SEMICOLON       shift and go to state 123


state 118

    (54) expression -> NAME LPAR RPAR LBRACK expression . RBRACK
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    RBRACK          shift and go to state 124
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 119

    (58) argument -> expression COMMA expression .
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    RPAR            reduce using rule 58 (argument -> expression COMMA expression .)
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 120

    (55) expression -> NAME LPAR argument RPAR LBRACK . expression RBRACK
    (33) expression -> . expression SUM expression
    (34) expression -> . expression SUB expression
    (35) expression -> . expression MULTIPLY expression
    (36) expression -> . expression DIVIDE expression
    (37) expression -> . expression RESTOF expression
    (38) expression -> . expression SAMEAS expression
    (39) expression -> . expression NEQUAL expression
    (40) expression -> . expression HEQUAL expression
    (41) expression -> . expression LEQUAL expression
    (42) expression -> . expression HIGHER expression
    (43) expression -> . expression LOWER expression
    (44) expression -> . expression AND expression
    (45) expression -> . expression OR expression
    (46) expression -> . TRUE
    (47) expression -> . FALSE
    (48) expression -> . DIFFER expression
    (49) expression -> . NUMBER
    (50) expression -> . FLOAT
    (51) expression -> . STRING
    (52) expression -> . NAME
    (53) expression -> . NAME LBRACK expression RBRACK
    (54) expression -> . NAME LPAR RPAR LBRACK expression RBRACK
    (55) expression -> . NAME LPAR argument RPAR LBRACK expression RBRACK
    (56) expression -> . NAME LPAR argument RPAR

    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    DIFFER          shift and go to state 55
    NUMBER          shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 52
    NAME            shift and go to state 62

    expression                     shift and go to state 125

state 121

    (28) statement -> NAME COLON types EQUALS expression SEMICOLON .

    RETURN          reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    IF              reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    NAME            reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    TRUE            reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    FALSE           reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    DIFFER          reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    STRING          reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)
    RCURLY          reduce using rule 28 (statement -> NAME COLON types EQUALS expression SEMICOLON .)


state 122

    (29) statement -> NAME COLON types EQUALS QMARK STRING . QMARK SEMICOLON

    QMARK           shift and go to state 126


state 123

    (31) statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .

    RETURN          reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    IF              reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    NAME            reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    TRUE            reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    FALSE           reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    DIFFER          reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    NUMBER          reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    FLOAT           reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    STRING          reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)
    RCURLY          reduce using rule 31 (statement -> NAME EQUALS QMARK STRING QMARK SEMICOLON .)


state 124

    (54) expression -> NAME LPAR RPAR LBRACK expression RBRACK .

    SUM             reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    SUB             reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    MULTIPLY        reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RESTOF          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    SAMEAS          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    NEQUAL          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    HEQUAL          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    LEQUAL          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    HIGHER          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    LOWER           reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    AND             reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    OR              reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RETURN          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    IF              reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    WHILE           reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    NAME            reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    TRUE            reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    FALSE           reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    DIFFER          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    NUMBER          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    FLOAT           reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    STRING          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RCURLY          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    LCURLY          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RBRACK          reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    COMMA           reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)
    RPAR            reduce using rule 54 (expression -> NAME LPAR RPAR LBRACK expression RBRACK .)


state 125

    (55) expression -> NAME LPAR argument RPAR LBRACK expression . RBRACK
    (33) expression -> expression . SUM expression
    (34) expression -> expression . SUB expression
    (35) expression -> expression . MULTIPLY expression
    (36) expression -> expression . DIVIDE expression
    (37) expression -> expression . RESTOF expression
    (38) expression -> expression . SAMEAS expression
    (39) expression -> expression . NEQUAL expression
    (40) expression -> expression . HEQUAL expression
    (41) expression -> expression . LEQUAL expression
    (42) expression -> expression . HIGHER expression
    (43) expression -> expression . LOWER expression
    (44) expression -> expression . AND expression
    (45) expression -> expression . OR expression

    RBRACK          shift and go to state 127
    SUM             shift and go to state 63
    SUB             shift and go to state 64
    MULTIPLY        shift and go to state 65
    DIVIDE          shift and go to state 66
    RESTOF          shift and go to state 67
    SAMEAS          shift and go to state 68
    NEQUAL          shift and go to state 69
    HEQUAL          shift and go to state 70
    LEQUAL          shift and go to state 71
    HIGHER          shift and go to state 72
    LOWER           shift and go to state 73
    AND             shift and go to state 74
    OR              shift and go to state 75


state 126

    (29) statement -> NAME COLON types EQUALS QMARK STRING QMARK . SEMICOLON

    SEMICOLON       shift and go to state 128


state 127

    (55) expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .

    SUM             reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    SUB             reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    MULTIPLY        reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RESTOF          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    SAMEAS          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    NEQUAL          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    HEQUAL          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    LEQUAL          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    HIGHER          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    LOWER           reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    AND             reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    OR              reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RETURN          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    IF              reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    WHILE           reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    NAME            reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    TRUE            reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    FALSE           reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    DIFFER          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    NUMBER          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    FLOAT           reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    STRING          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RCURLY          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    SEMICOLON       reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    LCURLY          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RBRACK          reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    COMMA           reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)
    RPAR            reduce using rule 55 (expression -> NAME LPAR argument RPAR LBRACK expression RBRACK .)


state 128

    (29) statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .

    RETURN          reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    IF              reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    NAME            reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    TRUE            reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    FALSE           reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    DIFFER          reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    NUMBER          reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    FLOAT           reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    STRING          reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)
    RCURLY          reduce using rule 29 (statement -> NAME COLON types EQUALS QMARK STRING QMARK SEMICOLON .)

